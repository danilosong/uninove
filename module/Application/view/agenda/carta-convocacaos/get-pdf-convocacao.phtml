<?php
/**
 * Inclui o CSS padrão contendo estilos prontos, para utilização exclusiva em
 * páginas de exibição do PDF
 * @author Danilo Dorotheu <danilo.dorotheu@live.com>
 * @since 10-11-2016
 * @path /module/Application/view/partials/style-pdf.phtml
 */
$this->__set('controller', '');
$this->__set('subMod', 'partials');
include $this->partial('style-pdf');
$this->__set('controller', 'guias');
$this->__set('subMod', 'tcmed');

?>
<style type="text/css">
    .text-red {
        color: #f00;
    }
    .sublinhado {
        text-decoration: underline; 
    }
    
    .folha * {
        color: #0f0;
    }
    
    .folha p{
        font-size: 16px;
    }
    .folha{
        font-family: Verdana, Arial, Helvetica, sans-serif;
    }
    
    table td p{
        background-color: #f00;
    }
    
    .image-hold {
        width: 50mm;
        float: right;
    }
    
</style>
<?php
// Códigos HTML para renderizar a folha do PDF corretamente
$abreFolha     = "<div class='folha'>";
$fechaFolha    = "</div>";
$quebraPagina  = "<div style='page-break-before: always;'></div>";
$novaPagina    = "{$fechaFolha}{$quebraPagina}{$abreFolha}";
$openTableFun     = "<table class='table table-striped'><thead><tr><th colspan='3'>Funcionário(s)</th></tr></thead><tbody>";
$openTableEmp     = "<table class='table table-striped'>"
        . "<thead>"
        . "<tr>"
        . "<th>Seq</th>"
        . "<th>Código</th>"
        . "<th>Condomínio</th>"
        . "<th>Data Cadastro</th>"
        . "<th>Pendentes</th>"
        . "</tr>"
        . "</thead>"
        . "<tbody>";
$closeTable    = "</tbody></table><br>";
       
$dtm           = new \DateTime('now');
$month         = $params($dtm->format('m'), "nome_mes");
$dataFormatada = "São Paulo, {$dtm->format('d')} de {$month} de {$dtm->format('Y')}";
$image         = "<img class='image-hold' src='{$params('all','vilaVelhaDir')}logoVilaVelha.png'>";

$quantGuiaPag = 0;

/* @var $administradora Tcmed\Entity\Administradora */
/* @var $funcionarios Tcmed\Entity\Funcionario */
/* @var $empresa Tcmed\Entity\Empresa */
/* @var $entity Tcmed\Entity\Guia */

foreach ($results as $dataAdm) {
    $administradora = $dataAdm['administradora'];
    $empresas       = $dataAdm['empresas']      ;
    
    /*
     * =========================================================================
     * Prepara o Rodapé
     */
    $rodape = <<<RODAPE
        <p>
            Atenciosamente,
            <br>
            <br>{$administradora->getHold('nomeHold')}
            <br>Saúde Ocupacional
            <br>Fone - {$administradora->getHold('contatoPrincipal', ['meioDeContatoPrincipal', ['telefone']])} - Fax - {$administradora->getHold('contatoPrincipal', ['meioDeContatoPrincipal', ['fax']])}
            <br>{$administradora->getHold('contatoPrincipal', ['meioDeContatoPrincipal', ['email']])}
        </p>   
RODAPE;
    /* ====================================================================== */
            
            
    /*
     * =========================================================================
     * Prepara o corpo da tabela de Empresas junto aos totais de funcionários
     * pendentes em cada uma destas
     */
    $tbody = '';
    
    $count = 40;
    foreach ($empresas as $key => $dataEmp) {
        
        if(0 == $count){
            $tbody .= $closeTable;
            $tbody .= $quebraPagina;
            $tbody .= $openTableEmp;
            $count = 62; // Total para a página cheia
        }
        
        $empresa           = $dataEmp['empresa']            ;
        $seqConv           = $dataEmp['seqConv']            ;
        $pendentes         = count($dataEmp['funcionarios']);
        $contFuncPendente += $pendentes                ;
        $key              += 1;
        
        $tbody .= "<tr>"
                . "<td>{$key}</td>"
                . "<td>{$empresa->getReferenciaEmp()}</td>"
                . "<td>{$empresa->getRazaoSocial()}</td>"
                . "<td>{$empresa->getCreatedAt()}</td>"
                . "<td>{$pendentes}</td>"
                . "</tr>";
                
        $count--;
    }
    /* ====================================================================== */
    
    $cartaAdm = <<<III_FOLHA1
        {$image}
        <p style="width: 140mm;">
            <b>{$dataFormatada}</b> 
            <br>
            {$administradora->getReferenciaSubhold()}: <b>{$administradora->getRazaoSocial()}</b>
            <br>
            A/C.: Departamento Pessoal - R.H. 
            <br>
            <br>
            <strong>Ref.: Gestão de Saúde Ocupacional</strong>
            <br>
            <br>
            Prezado(a) Administrador(a)
            <br>
            <br>
            
            Atendendo a obrigatoriedade do Ministério do Trabalho, estamos 
            convocando e entregando a(s) guia(s) de encaminhamento para 
            o(s) funcionário(s) . 
        </p>
    
        <br>
        <br>
               
        {$openTableEmp}    
            {$tbody}
        {$closeTable}
        </table>
        <br>
        <p style='text-align: right'>
            Total de Funcionários Pendentes: {$contFuncPendente}
        </p>
        <br>
        <p>
            <b>
                Lembramos que o comparecimento do funcionário é obrigatório, 
                salvo nos casos de <span class='text-red'>férias, licenças ou afastamentos</span>, quando o exame 
                é feito somente no retorno do funciopnário ao trabalho <span class='text-red'> (Se houver algum funcionário nesta situação favor desconsiderar a convocação).</span>
            </b>
        </p>
        <br>
        {$rodape}
III_FOLHA1;
        
    if(isset($data['showCartaAdm'])) {
        echo $abreFolha;
        echo $cartaAdm;
        echo $fechaFolha;
        echo $quebraPagina;
    }
        
    foreach ($empresas as $dataEmp) {
        $empresa      = $dataEmp['empresa']     ;
        $seqConv      = $dataEmp['seqConv']     ;
        $funcionarios = $dataEmp['funcionarios'];
        
        /**
         * =====================================================================
         * Prepara o corpo da tabela de funcionarios de cada empresa e o tipo de
         * convocação
         */
        $tbody = "";
        $count = 28; // Total para uma pagina já preenchida até a metade
        foreach ($funcionarios as $dataFun) {
            if(0 == $count){
                $tbody .= $closeTable;
                $tbody .= $quebraPagina;
                $tbody .= $openTableFun;
                $count = 62; // Total para a página cheia
            }
            $funcionario = $dataFun['funcionario'];
            $entity      = $dataFun['guia']       ;
            
            $tipoConvocacao = (3 == $seqConv)? "Ultima": "{$seqConv}ª";
            
            $tbody .= "<tr>"
                    . "<td>{$funcionario->getNomeFuncionario()}</td>"
                    . "<td>{$entity->getOcupacao('cargo', [TRUE])}</td>"
                    . "<td>{$tipoConvocacao} Convocação</td>"
                    . "</tr>";
            
            $count--;
                    
        }
        
        /* ================================================================== */
        
        
        $cartaEmp = <<<IIIIIII_FOLHA2
            {$image}
            <p>
                <b>{$dataFormatada}</b> 
                <br>
                A
                <br>
                <b>{$empresa->getRazaoSocial()}</b>
                <br>
                <small>
                    {$empresa->getEndereco('enderecoFormatado')}
                    <br>
                    A/C.: <b>{$administradora->getRazaoSocial()}</b>
                </small>
            </p>
            <h5>Ref.: CONVOCAÇÃO DE EXAME PERIÓDICO - PCMSO XXXX</h5>
            <p>
                Prezado(a) Síndico(a)
                <br> 
                <br>
                Atendendo a obrigatoriedade do Ministério do Trabalho, estamos convocando e entregando
                a(s) guia(s) de encaminhamento para o(s) funcionário(s) abaixo: .
                <br><br>
                <strong>Os exames periódicos anuais são obrigatórios salvo nos casos de <span class="text-red">férias,
                licenças ou afastamentos</span>, quando o exame somente é feito no retorno ao trabalho
                <span class="text-red">(se houver algum funcionário nesta situação favor desconsiderar a convocação).</span></strong><br><br>
                O(s) funcionário(s) convocado(s) deve(m) comparecer no local de atendimento
                <strong class='sublinhado'>da guia de encaminhamento</strong> anexa para realização do exame.
                Lembramos que o descumprimento desta obrigação
                deixará o funcionário sujeito a advertências ou outras penalidades previstas na CLT,
                exceto para o caso de férias, licença ou afastamento.
                <br><br>
                Esclarecemos que essa convocação respeita a data de aniversário
                dos exames periódicos da empresa/condomínio, independente
                da realização de outros exames pelo funcionário.
            </p>
            <br>
                {$openTableFun}    
                    {$tbody}
                {$closeTable}
            </table>
            <br>
            {$rodape}
            
IIIIIII_FOLHA2;
            
        if(isset($data['showCartaEmp'])) {
            echo $abreFolha;
            echo $cartaEmp;
            echo $fechaFolha;
            echo $quebraPagina;
        }
        
        /**
         * Contadores para exibir a guia corretamente.
         * 
         * $quantGuiaPag: A cada 2 Guias, deve-se quebrar a pagina.
         * $totalGuias: Este contador vai diminuindo, e quando atingir 0, a 
         * página não será mais quebrada
         */
        $quantGuiaPag = 0;
        $totalGuias   = count($funcionarios); 
        
        echo $abreFolha;
        
        foreach ($funcionarios as $dataFun) {
            $funcionario = $dataFun['funcionario'];
            $entity      = $dataFun['guia']       ;
            
            /**
             * Código que irá renderizar a Guia do funcionário no PDF
             * @see Application\view\tcmed\guias\get-pdf.phtml
             */
            $labelGuia = 'B';
            include $this->partial('get-pdf');
            if(0 == $quantGuiaPag) {
                echo '<br><br><br><br>';
            }
            
            $quantGuiaPag++;
            $totalGuias--;
            
            if(2 == $quantGuiaPag AND 0 != $totalGuias) {
                echo $novaPagina;
                $quantGuiaPag = 0;
            }
        }
        
        echo $fechaFolha;
        
    }
}
