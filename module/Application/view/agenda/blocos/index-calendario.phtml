<style type="text/css">
    .warning-line>td,
    .warning-line>td:hover {
        background-color: #ffe766;
    }
</style>
<?php
/** ===========================================================================|
 * FORM - Bloco
 * @author Danilo Dorotheu <danilo.dorotheu@live.com>
 * @since 15-08-2016
 * 
 * IncludeView - v1
 */
$controller = $this->dataView['controller'];
$action = $this->dataView['action'];
$route = $this->dataView['route'];
$title = $this->dataView['titulo'];
$partial = $this->partialObj('tcmed');
/* @var $table \Application\View\Helper\Table */
$table = $this->table();

$partial->partial('index/partial-form-messenger', null, ['this' => &$this]);

/* @var $fh \Application\View\Helper\FormHelp */
$fh = $this->formHelp($this, $form, $this->url($route, array(
            'controller' => $controller,
            'action' => $action,
            'id' => ($entity) ? $entity->getId() : 0,
                ), [], FALSE, $this->dataView['ajax']));
?>
<h3 class="text-center"><?php echo $title ?></h3>
<nav aria-label="...">
    <ul class="pager">
        <li class="previous prev-bloco hand"><a><span aria-hidden="true">&larr;</span> Mês Anterior</a></li>
        <li class="next next-bloco hand"><a>Próximo Mês <span aria-hidden="true">&rarr;</span></a></li>
    </ul>
</nav>

<?php
/* +----------------------------------------------------------------------------
 * | FILTROS
 * +----------------------------------------------------------------------------
 * Exibe os filtros da listagem de blocos
 * 
 */
$fh->formInit()->openCol(12); // ===============================================
$fh->openLine();
$fh->openCol(4);
$fh->checkbox('naoAgendado', ['position' => 'right'],['label'=>"&nbsp;&nbsp;Não agendados no mês {$this->dateRef}"]);
$naoAgendado = $fh->getLastId();
$fh->checkbox('exibeObsFirst', ['position' => 'right']);
$exibeObsFirst = $fh->getLastId();
$fh->closeCol();
$fh->openCol(2, 1);
echo "<h4 class='text-center'>{$this->dateRef}</h4>";
$fh->closeCol();
$fh->closeLine();
$fh->closeCol()->formEnd(); // =================================================


$table->openTable(TRUE);
/**
 * @param array $value Contém '[id,horasRestantes]'
 * @param array $data
 * @author Danilo Dorotheu <danilo.dorotheu@live.com>
 */
$lambda = function($value, $data) {
    $id = $value['id'];
    $referencia = $value['referencia'];
    $horasRestantes = $value['horasRestantes'];
    
    echo '<td>';
    if (0 < $horasRestantes) {
        // Se houver horas restantes no bloco, então exibir radiobox
        echo'    <input class="addBloco" type="radio" name="addBloco" value="' . $id . '">';
    }
    echo '   <a data-id="' . $id . '" class="hand abrir-lista" title="Abrir lista">' . $referencia . '</a>';
    echo'</td>';
};
$table->setLambda($lambda);
$table->setEditLine("first");

$table->renderThead([
    ['label' => 'Lista'],
    ['label' => 'Pagina'],
    ['label' => 'Data'],
    ['label' => 'Dr(a). Nome'],
    ['label' => 'Qtd Emp', 'options' => ' title="Quantidade de Empresas"'],
    ['label' => 'Qtd Fun', 'options' => ' title="Quantidade de Funcionários"'],
    ['label' => 'Consulta'],
    ['label' => 'Percurso'],
    ['label' => 'Horas', 'options' => ' title="Total de Horas"'],
    ['label' => 'Horas Restantes'],
    ['label' => 'Observação']
]);

/* @var $entity \Agenda\Entity\Bloco */
foreach ($this->entities as $entity) {

    $id = $entity->getId();
    $referencia = $entity->getReferencia();
    $horasRestantes = $entity->getHorasRestantes(FALSE);

    $table->renderLine([
        compact('id', 'referencia', 'horasRestantes'),
//        [$entity->getReferencia(), $entity->getHorasRestantes(FALSE)],
        implode("/ ", array_unique($entity->getPaginas(FALSE, "cleared"))),
        $entity->listaDiasAgendadoEm(),
        $entity->getMedico('nomeMedico'),
        $entity->getQtdEmpresas(),
        $entity->getQtdFunBloco(),
        $entity->getTotalTempoConsulta(),
        $entity->getTotalTempoTranslado(),
        $entity->getTotalHoras(),
        $entity->getHorasRestantes(),
        $entity->getObservacao(),
    ]);
}
$table->renderCloseTable();

// Var de transferencia PHP to JS
$transp = array(
    'dateRef' => $this->dateRef,
    'naoAgendado' => $naoAgendado,
    'exibeObsFirst' => $exibeObsFirst
);
?>
<br>
<br>
<script type="text/javascript">
    $(function () {
        var transp = <?php echo json_encode($transp) ?>;

        /**
         * 
         */
        $(".setDateRef").click(function () {
            var subOpcao = $(this).attr('data-type');

            $.processa({
                url: "<?php echo $this->url("agenda/default", array('controller' => "Blocos", 'action' => 'indexCalendario'), [], FALSE, FALSE); ?>",
                ret: "#show-blocos",
                savePage: false,
                type: "POST",
                data: {
                    dateRef: transp.dateRef,
                    subOpcao: subOpcao
                }
            });
        });
        
        $('.addBloco').uncheckableRadio();
        

        /**
         * @event
         * @description Abre a listagem deste bloco
         */
        $('.abrir-lista').click(function () {
            var $el = $(this);
            var id  = $el.data('id');
            
            // Quando a lista já estiver aberta, então fechá-la
            if($el.closest('tr').next().hasClass('warning-line')) {
                $el.closest('tr').next().find('.close-lista-itens').click();
                return false;
            }
            
            $el.closest('tr').addClass('warning-line');
            
            $.processa({
                url: "<?= $this->url($route, array('controller' => $controller, 'action' => "listaItensBloco"), [], FALSE, FALSE); ?>/" + id,
                callback: function(htmlLista) {
                    $el.closest('tr').after('<tr class="warning-line"><td><span class="close-lista-itens hand"><i class="fa fa-times"></i> Fechar</span></td><td colspan="10">'+htmlLista+'</td></tr>');
                }
            });
        });
        
        $(document).on('click', '.close-lista-itens', function() {
            $(this).closest('tr').prev().removeClass('warning-line');
            $(this).closest('tr').remove();
        });

        /**
         * @event
         * @description Busca os registros do mes anterior ao dateRef
         */
        $('.prev-bloco').click(function () {
            $.processa({
                url: "<?php echo $this->url($route, array('controller' => $controller, 'action' => 'prev'), [], FALSE, FALSE); ?>",
                ret: "#show-blocos"
            });
        });

        /**
         * @event
         * @description Busca os registros do mes seguinte ao dateRef 
         */
        $('.next-bloco').click(function () {
            $.processa({
                url: "<?php echo $this->url($route, array('controller' => $controller, 'action' => 'next'), [], FALSE, FALSE); ?>",
                ret: "#show-blocos"
            });
        });

        /**
         * @event
         * @description Quando clicar no checkbox naoAgendado, serão exibidos na
         * listagem apenas os blocos que ainda não foram agendados
         */
        $$(transp.naoAgendado).click(function () {
            var aux = $(this).is(':checked') ? 1 : 0;

            $.processa({
                url: "<?php echo $this->url($route, array('controller' => $controller, 'action' => 'filtrarAgendados'), [], FALSE, FALSE); ?>/" + aux,
                ret: "#show-blocos"
            });
        });
        
        /**
         * @event
         * @description Quando clicar no checkbox naoAgendado, serão exibidos na
         * listagem apenas os blocos que ainda não foram agendados
         */
        $$(transp.exibeObsFirst).click(function () {
            var aux = $(this).is(':checked') ? 1 : 0;

            $.processa({
                url: "<?php echo $this->url($route, array('controller' => $controller, 'action' => 'exibirObsPrimeiro'), [], FALSE, FALSE); ?>/" + aux,
                ret: "#show-blocos"
            });
        });
    });
</script>

