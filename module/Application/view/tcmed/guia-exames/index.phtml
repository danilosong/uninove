<?php
/* @var $fh    \Application\View\Helper\FormHelp */
/* @var $table \Application\View\Helper\Table */
/* @var $acl   \Application\View\Helper\Acl */
$param = $this->Param();
$table = $this->table();
$acl = $this->Acl($this->UserIdentity());
$controller = $this->dataView['controller'];
$action = $this->dataView['action'];
$route = $this->dataView['route'];

$fh = $this->formHelp($this, $this->form, $this->url($route, array('controller' => $controller, 'action' => $this->dataView['action']), [], FALSE, $this->dataView['ajax']));

$partial = $this->partialObj('tcmed');
$partial->partial('index/partial-form-messenger', null, ['this' => &$this]);
?>

<h3><?php echo $this->dataView['titulo'] ?></h3>
<p>
    <button class="btn btn-primary" onclick="<?php echo $this->url($route, array('controller' => $controller, 'action' => 'new')); ?>">Novo</button>
</p>

<?php
$fh->getForm()->loadSelectTipo(TRUE);
$fh->setHorizontal(false);
$fh->formInit(); // ============================================================
$fh->setPreFix('guiaExame');

// -- EMPRESA ---
$fh->openCol(12);
$partial->partial('empresas/partial-form-all', $fh, ['this' => &$this, 'hideCnpj' => TRUE]);
$fh->closeCol();

$fh->lineDown();   // --------------| PULA LINHA |------------------------------

$fh->setPreFix('funcionario');    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

$idFuncionario = $fh->getIdFor('idFuncionario');

$fh->openCol(3)->number('referenciaFun')->closeCol();
$referenciaFun = $fh->getLastId();

$fh->openCol(9)->text('nomeFuncionario', [
    "extra" => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"],
    "dt-clear" => join(",", array($idFuncionario, $referenciaFun)),
])->closeCol();
$nomeFuncionario = $fh->getLastId();

$fh->removePreFix('funcionario'); // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

$fh->lineDown();   // --------------| PULA LINHA |------------------------------

$fh->setHorizontal(TRUE);
$fh->openCol(9,3);
$fh->renderInputMultiCheckbox('checkTipo', ['noClean' => true]);
$fh->closeCol();
$fh->setHorizontal(FALSE);

$fh->lineDown();   // --------------| PULA LINHA |------------------------------

$fh->setPreFix('clinica');        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

$idClinica = $fh->getIdFor('idClinica');

$fh->openCol(9, 3)->text('fantasiaClinica', [
    "extra" => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"],
    "dt-clear" => join(",", array($idClinica)),
        ], ['label' => 'Clinica para o Exame:'])->closeCol();
$fantasiaClinica = $fh->getLastId();

$fh->removePreFix('clinica');     // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

$fh->lineDown();   // --------------| PULA LINHA |------------------------------

$fh->openCol(3, 3)->calend('ini', [], ['label' => 'Emitido em: '])->closeCol();
$fh->openCol(3)->calend('fim', [], ['label' => 'Até: '])->closeCol();

$idUsuario = $fh->getIdFor('idUsuario');
$fh->openCol(3)->text('createdBy', [
    "extra" => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"],
    "dt-clear" => join(",", array($idUsuario)),
])->closeCol();
$createdBy = $fh->getLastId();

$fh->lineDown();   // --------------| PULA LINHA |------------------------------

$fh->openCol(12)->submit('submit', 0, ['value' => 'Pesquisar'])->closeCol();

$fh->lineDown();   // --------------| PULA LINHA |------------------------------

$fh->removePreFix('guiaExame');  // ============================================

$fh->openCol(3, ['style' => 'margin-top: 30px'])->renderInputCheckbox("showInativo")->closeCol();
$showInativo = $fh->getLastId();
$fh->openCol(3, 6)->text('limitePag', ['labelWidth' => 8])->closeCol();

$fh->formEnd();

$table->openTable(TRUE);
$table->setEditLine('first');
$table->setOrderList($this->dataView['orderBy']);
$table->renderThead([
    'Ação',
    ['label' => 'Empresa', 'order' => 'e.fantasiaEmp'],
    ['label' => 'Funcionario', 'order' => 'e.nomeFuncionario'],
    'Credenciado',
    'Exames',
    'Data',
    'Hora',
]);

/* @var $entity \Tcmed\Entity\GuiaExame */
foreach ($this->data as $entity) {
    $exames = $entity->listExameCompl();
    foreach ($exames as $key => $exame) {
        $exames[$key] = '<li>' . $exame . '</li>';
    }
    $exames = implode('', $exames);

    $table->renderLine([
        $entity->getId(),
        $entity->getEmpresa()->getFantasiaEmpresa(),
        $entity->getNomeFuncionario(),
        $entity->getClinica()->getFantasiaClinica(),
        '<ul>' . $exames . '</ul>',
        $entity->getDataExame(),
        $entity->getHoraExame()
    ]);
}
$table->renderCloseTable();

$fieldsEntity = [
    'idFuncionario' => $idFuncionario,
    'nomeFuncionario' => $nomeFuncionario,
    'referenciaFun' => $referenciaFun,
    'fantasiaClinica' => $fantasiaClinica,
    'idClinica' => $idClinica,
    'showInativo' => $showInativo,
    'createdBy' => $createdBy,
    'idUsuario' => $idUsuario
];
?>
<br />

<center>
    <?php echo $this->paginationControl($this->data, 'Sliding', 'partials/paginator'); ?>    
</center>

<script lang="javascript">

    function isValid() {
        return true;
    }

    function edit(key) {
        var data = {url: "<?php echo $this->url($route, array('controller' => $controller, 'action' => 'edit'), [], FALSE, FALSE); ?>" + "/" + key};
        $.processa(data);
    }
    function del(key) {
        var msg = "Deseja mesmo excluir este registro?";
        if (!confirm(msg)) {
            return;
        }
        var data = {url: "<?php echo $this->url($route, array('controller' => $controller, 'action' => 'delete'), [], FALSE, FALSE); ?>" + "/" + key};
        $.processa(data);
    }

    $(function () {
        var fields = <?php echo json_encode($fieldsEntity) ?>;

        /*
         * Autocomp de Clinica
         */
        $$(fields.fantasiaClinica).auto({
            primary: "fantasiaClinica",
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Clinicas', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            responseTo: {
                "idClinica": [fields.idClinica],
            },
            showCols: ["fantasiaClinica"]
        });

        /*
         * Autocomp de Funcionario
         */
        $$(fields.nomeFuncionario).auto({
            primary: "nomeFuncionario",
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Funcionarios', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            responseTo: {
                "idFuncionario": [fields.idFuncionario],
                "referenciaFun": [fields.referenciaFun]
            },
            showCols: ["nomeFuncionario", "referenciaFun"]
        });
        
        /*
         * Autocomp de Funcionario
         */
        $$(fields.referenciaFun).auto({
            primary: "referenciaFun",
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Funcionarios', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            responseTo: {
                "idFuncionario": [fields.idFuncionario],
                "referenciaFun": [fields.referenciaFun]
            },
            showCols: ["nomeFuncionario", "referenciaFun"]
        });
        
        /*
         * Autocomp de Funcionario
         */
        $$(fields.createdBy).auto({
            primary: "nomeUsuario",
            serviceUrl: "<?php echo $this->url('app/default', array('controller' => 'Usuarios', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            responseTo: {
                "idUsuario": [fields.idUsuario],
            },
            showCols: ["nomeUsuario"]
        });
        
        /**
         * Simula um checkbox como sendo um radioBox
         * OBS: Recebe um array como parametro contendo array[[campo1,campo2],...];
         * 
         * @param {type} $fields
         * @returns {undefined}         
         */
        function simulateRadio(fields) {
            $.each(fields, function (key, campos) {
                if (2 < campos.length)
                    return false;

                var $even = $("input[value='" + campos[0] + "']");
                var $odd = $("input[value='" + campos[1] + "']");

                $even.click(function () {
                    var isCheck = $(this).prop("checked");
                    $(this).prop("checked", isCheck);
                    $odd.prop("checked", false);
                });

                $odd.click(function () {
                    var isCheck = $(this).prop("checked");
                    $(this).prop("checked", isCheck);
                    $even.prop("checked", false);
                });
            });
        }

        simulateRadio([
            ["0", "1"],
            ["1", "0"]
        ]);

    });
</script>