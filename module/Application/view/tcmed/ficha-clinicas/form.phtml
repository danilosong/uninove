<style>
    .form-group{
        margin-bottom:  0px;
        margin-top:     0px;
    }
    .form-group label{
        margin-bottom:  2px;
        font-size:      12px;
    }
    .input-group input[type=text]{
        height:         28px;
        font-size:      14px;
    }
    .input-group .btn{
        font-size:      10px;
    }
    input[type=checkbox],input[type=radio]{
        transform: scale(1.8, 1.8);
        margin: 10px;
    }
</style>
<?php 
/* 
 * @author Paulo Watakabe <email>watakabe05@gmail.com</email>
 */
/* @var $fh \Application\View\Helper\FormHelp */
/* @var $funEnt \Tcmed\Entity\Funcionario */
/* @var $consulta \Tcmed\Entity\Consulta */
    $controllerExamCompl = 'consultaExameCompls';
    $controllerCat       = 'cats';
    $controller          = 'fichaClinicas';
    $route               = 'tcmed/default';
    $consulta            = $this->entity;
    $funEnt              = $consulta->getFuncionario();
    $clinica             = $consulta->getClinica()->getId();
    $consultaId          = $consulta->getId();
    $funcionarioId       = $funEnt->getId();
    $empresaId           = $consulta->getEmpresa()->getId();
    $administ            = $consulta->getAdministradora()->getId();
    /* @var $atualOcup \Tcmed\Entity\HistOcupacional */
    $atualOcup           = $consulta->getHistOcupacional();
    $rules               = $this->form->getRules();
  
$partialObject = $this->partialObj('tcmed');
if($consulta){
    $showAlerta = [];
    if($consulta->getEmpresa() AND $consulta->getEmpresa()->getAlerta()){
        $showAlerta['empresa'] = $consulta->getEmpresa();
    }  
    if($consulta->getFuncionario() AND $consulta->getFuncionario()->getAlerta()){
        $showAlerta['funcionario'] = $consulta->getFuncionario();
    }  
    if(!empty($showAlerta)){
        $showAlerta['partial'] = $partialObject;
        $partialObject->partial('alertas/partial-show', $this, $showAlerta);
    }
}

if($funEnt) {
    $src = $this->Param('all','funcDir') . $funEnt->getEmpresa('id') . '/' . $funEnt->getFoto();   
    $img = $this->Image($src);
}else{
    $img = '';
}
    
$fh = $this->formHelp($this,$this->form,$this->url($route,array('controller'=>$controller,'action'=>$this->dataView['action']),[],FALSE,$this->dataView['ajax']));
$fh->setHorizontal(true);
$fh->setPreFix('consulta');
$fh->formInit('',['notOpenLine' => TRUE]);
?>

<div style="background-color: #e8e8e8;">
    
<table class="table table-bordered table-hover table-condensed">
    <thead>
    <tr>
        <th colspan="5" class="text-center"><h3>Ficha Clinica.</h3></th>
    <tr>
    <tr>
        <th style="width: 10%" class="text-right">Holding</th>
        <td style="width: 10%" class="text-right"><?php echo $funEnt->getEmpresa()->getAdministradora()->getHold()->getId(); ?></td>
        <td colspan="2"><?php echo $funEnt->getEmpresa()->getAdministradora()->getHold()->getNomeHold(); ?></td>
        <td rowspan="6"><img id='show-foto' style='height: 250px;' src="<?= $img;?>" alt='Sem Imagem' class='img-thumbnail'></td>
    </tr>
    <tr>
        <th class="text-right">Administradora</th>
        <td class="text-right"><?php echo $funEnt->getEmpresa()->getAdministradora()->getReferenciaAdm(); ?></td>
        <td colspan="2"><?php echo $funEnt->getEmpresa()->getAdministradora(); ?></td>
    </tr>
    <tr>
        <th class="text-right">EMPRESA</th>
        <td class="text-right"><?php echo $funEnt->getEmpresa()->getReferenciaEmp(); ?></td>
        <td colspan="2"><?php echo $funEnt->getEmpresa(); ?></td>
    </tr>
    <tr>
        <th class="text-right">FUNCIONARIO</th>
        <td class="text-right"><?php echo $funEnt->getReferenciaFun(); ?></td>
        <td colspan="2"><?php echo $funEnt->getNomeFuncionario(); ?></td>
    </tr>
    <tr>
        <th class="text-center">MEDICO</th>
        <td colspan="3"><?php 
            $attrib = ($rules['medico'] ? [] : ['disabled' => TRUE]);
            $fh->openCol('12')->setPreFix('medico')->text('nomeMedico',['noLabel' => true],$attrib)->closeCol()->removePreFix('medico'); 
        ?></td>
    </tr>
    <tr>
        <th class="text-center">CLINICA</th>
        <td colspan="3"><?php 
            $attrib = ($rules['clinica'] ? [] : ['disabled' => TRUE]);
            $fh->openCol('12')->setPreFix('clinica')->text('fantasiaClinica',['noLabel' => true],$attrib)->closeCol()->removePreFix('clinica'); 
        ?></td>
    </tr>
    <tr>
        <th nowrap class="text-right">Sexo</th>
        <td nowrap><?php 
        echo '<span id="spanFunSexo">', $funEnt->getSexo(), '</span>'; 
        echo $fh->buildButton(['onClick' => 'alteraSexoAntecedentes()', 'class' => 'btn btn-success'],'Altera Sexo');
        ?></td>
        <th nowrap class="text-right">Nascimento</th>
        <td nowrap colspan="2"><?php echo $funEnt->getDtNascimento(); ?></td>
    </tr>
    <tr>
        <td colspan="5">
            <table style="width: 100%;">
                <tr>
                    <td>
                        <div style="border: 1px #000 solid; width: 100%;">                
                            <table class="table table-bordered table-hover table-condensed">
                                <caption style="text-align: center"><h3>Ocupação Atual</h3></caption>
                                <tr>
                                    <th nowrap class="text-right" width="20%">Setor</th>
                                    <td nowrap><?php echo $atualOcup->getOcupacao()->getSetor(); ?></td>
                                </tr>    
                                <tr>
                                    <th nowrap class="text-right">Cargo</th>
                                    <td nowrap><?php echo $atualOcup->getOcupacao()->getCargo(TRUE); ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right ">Descrição do Cargo</th>
                                    <td><?php echo $atualOcup->getOcupacao()->getDescricaoCargo('descricao'); ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">Função(ões)</th>
                                    <td><?php 
                                        foreach ($atualOcup->getAllFuncaos() as $ent) {
                                            echo $ent, ', ';
                                        } 
                                    ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">Riscos</th>
                                    <td><?php 
                                        $grauRisco = '';
                                        foreach ($atualOcup->getOcupacao()->listOfCargoRiscos() as $ent) {
                                            $grauRisco .= $ent->getSomatoria() . ', ';
                                            echo $ent->getRisco()->getRisco(), ', ';
                                        } 
                                    ?></td>
                                </tr>    
                                <tr>
                                    <th nowrap class="text-right">Grau de Riscos</th>
                                    <td nowrap><?php echo $grauRisco; ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">EPI</th>
                                    <td><?php 
                                        foreach ($atualOcup->getOcupacao()->listOfCargoRiscosEpis() as $entityEpis) {
                                            /* @var $epi \Tcmed\Entity\EpiOcupacao or \Tcmed\Entity\EpiCargo */
                                            echo $entityEpis->getEpi(); ', ';                    
                                        } 
                                    ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">EPC</th>
                                    <td><?php 
                                        foreach ($atualOcup->getOcupacao()->listOfCargoRiscosEpcs() as $entityEpcs) {
                                            /* @var $epi \Tcmed\Entity\EpcOcupacao or \Tcmed\Entity\EpcCargo */
                            //                echo var_dump($entityEpcs); ', ';                    
                                            echo $entityEpcs->getEpc(); ', ';                    
                                        } 
                                    ?></td>
                                </tr>
                            </table>
                        </div>
                        
                    </td>
                    
<? // verificar se é mudança de função se tem guia e se na guia tem a nova ocupação para exibição.
   if($consulta->getTipo() == "MDF" AND $consulta->getGuia() AND $consulta->getGuia()->getNewOcupacao()): 
       /* @var $newOcup \Tcmed\Entity\Ocupacao */
       $newOcup = $consulta->getGuia()->getNewOcupacao();
?>
                    <td id="nova-ocupacao">
                        <div style="border: 1px #000 solid; width: 100%;">                
                            <table class="table table-bordered table-hover table-condensed">
                                <caption style="text-align: center"><h3>Nova Ocupação</h3></caption>
                                <tr>
                                    <th nowrap class="text-right" width="20%">Setor</th>
                                    <td nowrap><?php echo $newOcup->getSetor(); ?></td>
                                </tr>    
                                <tr>
                                    <th nowrap class="text-right">Cargo</th>
                                    <td nowrap><?php echo $newOcup->getCargo(TRUE); ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right ">Descrição do Cargo</th>
                                    <td><?php echo $newOcup->getCargoDescricao(); ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">Função(ões)</th>
                                    <td nowrap><?php ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">Riscos</th>
                                    <td><?php 
                                        $grauRisco = '';
                                        foreach ($newOcup->listOfCargoRiscos() as $ent) {
                                            $grauRisco .= $ent->getSomatoria() . ', ';
                                            echo $ent->getRisco()->getRisco(), ', ';
                                        } 
                                    ?></td>
                                </tr>    
                                <tr>
                                    <th nowrap class="text-right">Grau de Riscos</th>
                                    <td nowrap><?php echo $grauRisco; ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">EPI</th>
                                    <td><?php 
                                        foreach ($newOcup->listOfCargoRiscosEpis() as $entityEpis) {
                                            /* @var $epi \Tcmed\Entity\EpiOcupacao or \Tcmed\Entity\EpiCargo */
                                            echo $entityEpis->getEpi(); ', ';                    
                                        } 
                                    ?></td>
                                </tr>
                                <tr>
                                    <th nowrap class="text-right">EPC</th>
                                    <td><?php 
                                        foreach ($newOcup->listOfCargoRiscosEpcs() as $entityEpcs) {
                                            /* @var $epi \Tcmed\Entity\EpcOcupacao or \Tcmed\Entity\EpcCargo */
                            //                echo var_dump($entityEpcs); ', ';                    
                                            echo $entityEpcs->getEpc(); ', ';                    
                                        } 
                                    ?></td>
                                </tr>
                            </table>
                        </div>
                    </td>
<? endif; ?>
                </tr>
            </table>
        </td>
    </tr>
<?php
$fh->removePreFix();
?>    
    <tr>
        <th nowrap colspan="5"><?php $fh->checkbox('atualizaOcupacao',['position' => 'left']); ?></th>
    </tr>
<?php
$fh->setPreFix('consulta');
?>        
    </thead>
</table>
<?php
    $fh->openLine()->openCol('4')->calend('dtConsulta',['labelWidth' => '5'])->closeCol();
    $fh->openCol('5')->select('tipo',['labelWidth' => '4'])->closeCol();
    $fh->openCol('3');
?> 
<table class="table table-bordered table-hover table-condensed">
    <thead>
    <tr>
        <th class="text-right">Numero</th>
        <td><?php echo $consultaId ; ?></td>
    </tr>
    </thead>
</table>

<?php
    $fh->closeCol()->closeLine();
// EXIBIR A LISTA DE FICHAS CLINICAS     
echo '<div id="listaFichaClinicas"></div>';  
echo '<div id="listaConsultaAnexo" style="border : #fff solid 2px; margin-bottom : 10px;"></div>';  

$fh->openLine();
// Se tiver obs da consulta anterior sera exibido
/* @var $consultaAnt \Tcmed\Entity\Consulta */
$consultaAnt = $consulta->getConsultaAnt();
if($consultaAnt AND !empty($consultaAnt->getObservacaoRetorno())){
        $fh->openCol('12');
            echo '<h3 style="background-color : white; padding: 10px;"><strong>Justificativa do Retorno : </strong>' , $consulta->getConsultaAnt('observacaoRetorno'), '</h3>';
        $fh->closeCol();
    $fh->lineDown();
}

    $fh->openCol('12')->textArea('queixa')->closeCol();
$fh->lineDown();

$fh->removePreFix();
    $fh->openCol('6');
        $this->partialObj('tcmed')->partial('questionarios/partial-form-Interrogatorio', $fh,['this' => &$this,'interrogatorio' => '1']);
    $fh->closeCol()->openCol('6');
        $this->partialObj('tcmed')->partial('questionarios/partial-form-Interrogatorio', $fh,['this' => &$this,'interrogatorio' => '2']);
    $fh->closeCol();  
$fh->lineDown();
    $fh->openCol('4');
        $this->partialObj('tcmed')->partial('questionarios/partial-form-Antecedentes', $fh,['this' => &$this,'sexo' => $funEnt->getSexo(),'idFuncionario' => $funEnt->getId()]);    
    $fh->closeCol()->openCol('4');
        $this->partialObj('tcmed')->partial('questionarios/partial-form-HistFamiliar', $fh,['this' => &$this]);    
    $fh->closeCol()->openCol('4');
        $this->partialObj('tcmed')->partial('questionarios/partial-form-Medicoes', $fh,['this' => &$this]);    
    $fh->closeCol(); 
$fh->lineDown();
    $fh->openCol('12');
        $this->partialObj('tcmed')->partial('questionarios/partial-form-ExameFisico', $fh,['this' => &$this]);    
    $fh->closeCol(); 
$fh->lineDown();
    $fh->openCol('12');
        $this->partialObj('tcmed')->partial('consulta-exame-compls/partial-form-quick-add', $fh, ['this' => &$this]);    
    $fh->closeCol(); 
$fh->lineDown();
    $fh->openCol('12');
        // EXIBIR A LISTA DE Exames Complementares
        echo '<div id="listaExaCompl"></div>';    
    $fh->closeCol();

    
$fh->lineDown();
    $fh->openCol('6');
        $this->partialObj('tcmed')->partial('cids/partial-form-ficha-clinica', $fh,['this' => &$this]);            
    $fh->closeCol();
$fh->setPreFix('consulta');
    $fh->setHorizontal(FALSE)->openCol('6');
        echo '<br>';
        echo '<br>';
        echo '<br>';
        $fh->textArea('observacaoCid',[],['rows' => '7.5','id' => 'observacaoCid'])->closeCol()->setHorizontal(TRUE);
    
$fh->lineDown();
    $fh->openCol('12');
        echo '<h4>CAT DO FUNCIONARIO</h4>';    
    $fh->closeCol();
$fh->lineDown();
    $fh->openCol('6')->checkbox('abrirCat',[],['id' => 'consultaAbrirCat'])->closeCol();
    $fh->openCol('6')->checkbox('catAberto')->closeCol();
$fh->closeLine()->removePreFix();
        $this->partialObj('tcmed')->partial('cats/partial-form-quick-add', $fh,['this' => &$this,]);  
$fh->openLine();
    $fh->openCol('12');
        // EXIBIR A LISTA DE CAT
        echo '<div id="listaCat"></div>';    
    $fh->closeCol();

$fh->lineDown()->setPreFix('consulta');
    $fh->setHorizontal(FALSE)->openCol('3')->radio('normal', [],['id' => 'normal'])->closeCol();
    $fh->openCol('3')->radio('ocupacional', [],['id' => 'ocupacional'])->closeCol();
    $fh->openCol('3')->radio('resultado',['partial' => ['ini' => 0, 'fim' => 2]], ['id' => 'resultado'])->closeCol();
    $fh->openCol('3')->radio('resultado',['partial' => ['ini' => 2]],             ['id' => 'resultado2'])->closeCol();
    $inpResultado = $fh->getLastId();
$fh->lineDown();
    $fh->openCol(6,6)->radio('inss', [],['id' => 'radInss'])->setHorizontal(TRUE)->closeCol();
$fh->lineDown();
    $fh->openCol('4')->calend('dtRetorno')->closeCol();
    $fh->openCol('8')->textArea('observacaoRetorno')->closeCol();
$fh->lineDown();
    $fh->openCol('12')->radio('validade')->closeCol();
$fh->lineDown();
echo '<br>';
    $fh->openCol('12')->textArea('observacaoFinal')->closeCol();
    $inpObsAso = $fh->getLastId();
$fh->lineDown();
    $fh->openCol('12')->Submit('submit')->closeCol();
$fh->closeLine()->formEnd();

if($consultaAnt){
    $em = $fh->getForm()->getEm();
    $respostaPeso    = $consultaAnt->listResposta(['pergunta' => $em->getReference('\Tcmed\Entity\Pergunta', 41)]);
    if($respostaPeso instanceof \Tcmed\Entity\Resposta == FALSE){
        $respostaPeso = false;
    }
    $respostaAltura  = $consultaAnt->listResposta(['pergunta' => $em->getReference('\Tcmed\Entity\Pergunta', 42)]);
    if($respostaAltura instanceof \Tcmed\Entity\Resposta == FALSE){
        $respostaAltura = false;
    }
    $respostaPressao = $consultaAnt->listResposta(['pergunta' => $em->getReference('\Tcmed\Entity\Pergunta', 46)]);
    if($respostaPressao instanceof \Tcmed\Entity\Resposta == FALSE){
        $respostaPressao = false;
    }
}
// === TRANSPORTE ==============================================================
/**
 * @var array Array de transporte do PHP para javascript
 */
$fields = [
    "pesoAnt"       => isset($respostaPeso)    ? $respostaPeso->getResposta()    : ''
    ,"alturaAnt"    => isset($respostaAltura)  ? $respostaAltura->getResposta()  : ''
    ,"pressaoAnt"   => isset($respostaPressao) ? $respostaPressao->getResposta() : ''
    ,'funcionario'  => $funcionarioId
    ,'id'           => $consultaId
    ,'inpResultado' => $inpResultado
    ,'inpObsAso'    => $inpObsAso
];
?>
</div>
<br />
<br />
<br />
<br />
<script src="//cdn.jsdelivr.net/jquery.scrollto/2.1.2/jquery.scrollTo.min.js"></script>
<script lang="javascritp">  
    var fieldsFichaClinica = <?php echo json_encode($fields) ?>; 
    
    var isValid = function(){
        var flag = true;
        // esta funcao esta no partial da pasta questionarios arq partial-form-interrogatorio.phtml
        if(isValidInterrogatorio() === false){
            flag = false;
        }
        // esta funcao esta no partial da pasta questionarios arq partial-form-histfamiliar.phtml
        if(isValidHistorioFamiliar() === false){
            flag = false;
        }
        // esta funcao esta no partial da pasta questionarios arq partial-form-antecedentes.phtml
        if(isValidAntecedentes() === false){
            flag = false;
        }
        // esta funcao esta no partial da pasta questionarios arq partial-form-medicoes.phtml
        if(isValidMedicoes() === false){
            flag = false;
        }
        // esta funcao esta no partial da pasta questionarios arq partial-form-ExameFisico.phtml
        if(isValidExameFisico() === false){
            flag = false;
        }
        // esta funcao esta no partial da pasta cid arq partial-form-ficha-clinica.phtml
        if(isValidCID() === false){
            flag = false;
        }
        // Valida o preenchimento  Normal Alterado
        if(isValidConclusaoMedica() === false){
            flag = false;
        }
        // Valida o preenchimento  ocupacional ou nao ocupacional
        if(isValidConclusaoOcupacional() === false){
            flag = false;
        }
        // Valida o preenchimento  apto, inapto, apto com restricao, aguardando resposta
        if(isValidResultadoExame() === false){
            flag = false;
        }
        // Valida o preenchimento  retorno se o mesmo for marcado
        if(isValidIfHasRetorno() === false){
            flag = false;
        }
        // Valida o preenchimento o preenchimento da validade ou limita as suas opçoes
        if(isValidValidade() === false){
            flag = false;
        }
        // Se consulta form RET e Inapto obrigar preenchimento do radio INSS 
        if(isValidRetInapto() === false){
            flag = false;
        }
        // Se consulta form DEM e Inapto obrigar do segundo CID
        if(isValidDemInapto() === false){
            flag = false;
        }
        if(!flag){
            checkIsHaveError();
        }else{
            ativarMedicoes();
        }
        return flag;
    };
    
    // Valida o preenchimento  retorno se o mesmo for marcado
    var isValidIfHasRetorno = function(){
        var $dtRetorno = $$("#consulta[dtRetorno]");
        var $obRetorno = $$("#consulta[observacaoRetorno]");
        removeAlert($obRetorno.closest('.form-group'));
        if($dtRetorno.val() != '' && $obRetorno.val() == ''){
            makeDivError($obRetorno.closest('.form-group'), "Quando há marcação de retorno ele deve ser justificado!!!");
            return false;
        }
        return true;
    };
    
    // Valida o preenchimento da validade 
    var isValidValidade = function(){
        var validades = window.document.getElementsByName('consulta[validade]');
        var checked = false;
        if(validades.length == 0){
            console.log('nao encontrou nenhum item de resultado na ficha clinica!!');
            return false;
        }
        var $validade = $(validades[0]);
        removeAlert($validade.closest('.form-group'));            
        $.each(validades, function(k,v){
            if($(v).is(':checked')){
                checked = true;
            }
        });
        if(checked){
            return true;
        }
        // pede o preenchimento do item.
        makeDivError($validade.closest('.form-group'), "Seleciona a validade da consulta por favor!!!");
        
        return false;
    };
    
    /*
     * Para retorno ao trabalho inapto exibir e obrigar preenchimento do INSS
     * @author Paulo Watakabe <watakabe05@gmail.com>
     * @since 14-11-2017
     */
    var showRetInapto = function(call){
        var ifchecked = checkRetInapto(call);
        if(ifchecked && $$("#consulta[tipo]").val() == 'RET'){
            $('#radInss').closest('.row').show('slow');
        }else{
            $('#radInss').closest('.row').hide('slow');
        }
        if(call){
            $$("#consulta[tipo]").change(call);
        }
    };        
    var checkRetInapto = function (call) {            
        var flag = true;      
        var $radio = $("#resultado");  
        var $radio2 = $("#resultado2");  
        // validar resutado exame
        var ifchecked = false;
        $radio.closest('.form-group').find("input").each(function(index, ele) {
            var $radInss = $(ele);
            if(call){
                $radInss.click(call);
            }
            if($radInss.is(':checked') && $radInss.val() === '0'){
                ifchecked = true;
            }
        });
        $radio2.closest('.form-group').find("input").each(function(index, ele) {
            var $radInss = $(ele);
            if(call){
                $radInss.click(call);
            }
            if($radInss.is(':checked') && $radInss.val() === '0'){
                ifchecked = true;
            }
        });    

        return ifchecked;
    };  
    var isValidRetInapto = function(){  
        
        var inss = window.document.getElementsByName('consulta[inss]');
        if(inss.length == 0){
            console.log('nao encontrou nenhum item de inss na ficha clinica!!');
            return false;
        }
        var $inss = $(inss[0]);
        removeAlert($inss.closest('.form-group'));  
        
        var checked = checkRetInapto(); // verifica se é ret e inapto  
        if(!checked || $$("#consulta[tipo]").val() != 'RET'){
            return true;
        }
        
        var checked = false;
        $.each(inss, function(k,v){
            if($(v).is(':checked')){
                checked = true;
            }
        });
        if(checked){
            return true;
        }
        // pede o preenchimento do item.
        makeDivError($inss.closest('.form-group'), "Seleciona a opção do INSS da consulta por favor!!!");
        
        return false;
    };
    
    var isValidDemInapto = function(){  
        var $cid2 = $('#numeroCid1');
        
        removeAlert($cid2.closest('.form-group'));           
        
        if($cid2.val() != ''){
            return true;
        }
        
        var checked = checkRetInapto(); // verifica se é ret e inapto  
        if(!checked || $$("#consulta[tipo]").val() != 'DEM'){
            return true;
        }
        
        // pede o preenchimento do item.
        makeDivError($cid2.closest('.form-group'), "Demissional Inapto é obrigatorio o preenchimento do segundo CID da consulta por favor!!!");
        
        return false;
    };
        
    var sumulaINSS = function(reset){
        var $obs = $$(fieldsFichaClinica.inpObsAso);
        if(!fieldsFichaClinica.obsAtual){
            fieldsFichaClinica.obsAtual = $obs.val();
        }
        var txt = 'O parecer deste ASO respeita o Código de Ética Médica Capítulo I, incisos IV, VIII e XII.'
            + "<br>Há desacordo entre o parecer do perito do INSS e o médico examinador, por isso o empregador deverá ter atenção ao art. 482, itens 'e' e 'i', da CLT, Súmulas 15 e 32 do TST, e nas leis 11.907/09(art. 30, I) e 605/49(art. 6º, § 2º)."
            + '<br>Encaminho o empregado para reavaliação do INSS.';
        // volta o texto inicial
        if(reset){
            $obs.val(fieldsFichaClinica.obsAtual);
        }
        // verifica se ja existe o texto na obs aso  
        var ob = $obs.val();
        if(ob.search('O parecer deste ASO respeita') !== -1){
            if(reset){
            // se for um reset remove o texto da sumula da obs
                var rmSumula = $obs.val().replace(txt,'');
                $obs.val(rmSumula);
            }
            console.log(ob.search('O parecer deste ASO respeita'));
            return;
        }
        if(reset){
            return;
        }
        
        $obs.val(txt);
    };
    
    // Verifica o preenchimento da validade ou limita as suas opçoes
    var checkValidade = function(inaptoClicked){
        console.log(inaptoClicked);
        var $tipo      = $$("#consulta[tipo]");
        var validades  = window.document.getElementsByName('consulta[validade]');
        var resultados = window.document.getElementsByName('consulta[resultado]');
        var inapto     = false;
        // verifica se esta inapto
        $.each(resultados, function(k,v){
            var $checkbox = $(v);
            if($checkbox.val() == '0' && $checkbox.is(':checked')){
                inapto = true;
            }
        });
        // exibir todos e selectiona default se o inapto não foi clicado
        $.each(validades, function(k,v){
            var $checkbox = $(v);
            $checkbox.closest('.radio-inline').show();
            if($checkbox.val() == '1Y' && !inaptoClicked){
                $checkbox.attr('checked', true);
                $checkbox.prop('checked', true);
            }else{
                $checkbox.attr('checked', false);
                $checkbox.prop('checked', false);
            }
        });       
        // demissional e inapto somente validade indeterminada
        if($tipo.val() == 'DEM' && inapto){ 
            $.each(validades, function(k,v){
                var $checkbox = $(v);
                if($checkbox.val() != 'NULL'){
                    $checkbox.closest('.radio-inline').hide();
                }else{
                    $checkbox.attr('checked', true);
                    $checkbox.prop('checked', true);
                }                
            });
            return true;
        }  
        
        return true;
    };
    
    // Valida o preenchimento  apto, inapto, apto com restricao, aguardando resposta
    var isValidResultadoExame = function(){
        var flag = true;      
        var $radio = $("#resultado");  
        var $radio2 = $("#resultado2");  
        var $radioAlert = $radio.closest('.form-group');  
        removeAlert($radioAlert); 
        removeAlert($("#observacaoCid").closest('.form-group')); 
        
        // validar resutado exame
        var checked = false;
        $radioAlert.find("input").each(function(index, ele) {
            if($(ele).prop('checked')){
                checked = true;
            }
        });
        $radio2.closest('.form-group').find("input").each(function(index, ele) {
            if($(ele).prop('checked')){
                checked = true;
            }
        });       
        
        if(checked === false){
            makeDivError($radioAlert, $radioAlert.find('label').html());
            flag = false;
        }
        // Se for apto com restricao obrigatorio preencher o cid observacao
        if($radio2.prop('checked') && $("#observacaoCid").val() === ""){
            makeDivError($("#observacaoCid").closest('.form-group'), "Quando o resultado for apto com restrição deve ser preenchido a Obeservação do CID ");
            flag = false;
        }
        
        return flag;
    };
    
    // Valida o preenchimento  ocupacional ou nao ocupacional
    var isValidConclusaoOcupacional = function(){
        var flag = true;      
        var $radio = $("#ocupacional");  
        var $radioAlert = $radio.closest('.form-group');  
        removeAlert($radioAlert); 
        
        // validar Conclusão Ocupacional
        var checked = false;
        $radioAlert.find("input").each(function(index, ele) {
            if($(ele).prop('checked')){
                checked = true;
            }
        });
        if(checked === false){
            makeDivError($radioAlert, $radioAlert.find('label').html());
            flag = false;
        }
        
        return flag;
    };
    
    // Valida o preenchimento  Normal Alterado
    var isValidConclusaoMedica = function(){
        var flag = true;      
        var $radio = $("#normal");  
        var $radioAlert = $radio.closest('.form-group');  
        removeAlert($radioAlert); 
        
        // validar Conclusão Medica
        var checked = false;
        $radioAlert.find("input").each(function(index, ele) {
            if($(ele).prop('checked')){
                checked = true;
            }
        });
        if(checked === false){
            makeDivError($radioAlert, $radioAlert.find('label').html());
            flag = false;
        }
        
        return flag;
    };
    
    
    var errorCont = 0;
    var makeDivError = function($target, msg, id, supress){
        if($target.find('.alert').size() === 1){// Caso já exita um alerta não faz nada
            return;
        }
        if(msg === null){ // Arruma o paramentro de msg
            msg = '';
        }
        if(id === false){ // Redireciona paramentro id para supress
            supress = false;
            id = null;
        }
        if(id === null){ // Gera o id para a div alerta caso null sera acrecentado na variavel numerica global
            errorCont++ ;
            id = 'erro' + errorCont;
        }
        if(supress === false){ // decide se coloca complemente padra de erro
            compl = "</div>";
        }else{
            compl = " Não pode estar em branco</div>";            
        }
        $target.append('<div class="alert alert-danger" role="alert" id="' + id + '">' + msg + compl);
    };
    
    var removeAlert = function($target){
        $target.find('.alert').remove();
    };
    
    var checkIsHaveError = function(){
        var al = $('.alert:eq(0)');
        if(al.size() === 1){
            $("#page-wrapper").scrollTo(al, 1000, {offset:-200});
        }
    };

    var getHtmlOfListOfFichaClinica = function(){
        var idFunc = "<?php echo $funEnt->getId(); ?>";
        $.processa({
            url: "<?php echo $this->url($route, array('controller' => $controller, 'action' => 'listaFichaClinica'), [], FALSE, FALSE); ?>" + "/" + idFunc,
            ret: "#listaFichaClinicas",
            savePage : false,
            last : false
        });
    };
    
    var getHtmlOfListOfConsultaAnexo = function(){
        $.processa({
            url: "<?php echo $this->url($route, array('controller' => 'ConsultaAnexos', 'action' => 'index'), [], FALSE, FALSE); ?>",
            ret: "#listaConsultaAnexo",
            savePage : false,
            last : false,
            type : 'POST',
            data : {
                ret          : "#listaConsultaAnexo"
                ,funcionario : fieldsFichaClinica.funcionario
                ,consulta    : fieldsFichaClinica.id
            }
        });
    
    };

    var getHtmlOfExamCompl = function(){
        var idFunc = "<?php echo $funEnt->getId(); ?>";
        $.processa({
            url: "<?php echo $this->url($route, array('controller' => $controllerExamCompl, 'action' => 'listaExameCompls'), [], FALSE, FALSE); ?>" + "/" + idFunc,
            ret: "#listaExaCompl",
            savePage : false,
            last : false
        });
    };

    var getHtmlOfListOfCat = function(){
        var idFunc = "<?php echo $funEnt->getId(); ?>";
        $.processa({
            url: "<?php echo $this->url($route, array('controller' => $controllerCat, 'action' => 'listaCat'), [], FALSE, FALSE); ?>" + "/" + idFunc,
            ret: "#listaCat",
            savePage : false,
            last : false
        });
    };
    
    var shoOrHideFormCat = function(){
        if($('#consultaAbrirCat').prop('checked')){
            $('#fieldOfCat').show();
        }else{
            $('#fieldOfCat').hide();
        }
    };

    $(function(){
        var fields = <?php echo json_encode($fields) ?>;
        /**
         * Exibir as consultas deste funcionario
         */
        getHtmlOfListOfFichaClinica();
        /**
         * Exibir os anexos deste funcionario
         */
        getHtmlOfListOfConsultaAnexo();
        /**
         * Exibir os exames complemetares deste funcionario
         */
        getHtmlOfExamCompl();
        /**
         * Exibir os CATs deste funcionario
         */
        getHtmlOfListOfCat();
        /**
         * Checar se tem erros no preenchimento do form apos validação dos filters
         */
        checkIsHaveError();   
        /**
         * Exibir ou Ocultar campo do form cat para preenchimento.
         */
        $('#consultaAbrirCat').click(shoOrHideFormCat);
        shoOrHideFormCat();
        
        
        var resultados = window.document.getElementsByName('consulta[resultado]');
        $.each(resultados, function(k,v){
            var $checkbox = $(v);
            // colocar funcao quando clicar inapto para setar os campos
            if($checkbox.val() == '0'){
                $checkbox.click(function(){
                    checkValidade(true);
                });
            }else{
                $checkbox.click(function(){
                    checkValidade(false);
                });
            }
        });        
        $$("#consulta[tipo]").change(function(){
            checkValidade();
        });
        checkValidade();
        
        if(fields.pesoAnt){
            $('#TITLE-PESO').html(' (' + fields.pesoAnt + ')');
        }
        
        if(fields.alturaAnt){
            $('#TITLE-ALTURA').html(' (' + fields.alturaAnt + ')');
        }
        
        if(fields.pesoAnt){
            $('#TITLE-PRESSAO').html(' (' + fields.pressaoAnt[0] + '/' + fields.pressaoAnt[1] + ')');
        }
        
        /*
         * Para retorno ao trabalho inapto exibir e obrigar preenchimento do INSS
         * @author Paulo Watakabe <watakabe05@gmail.com>
         * @since 14-11-2017
         */
        showRetInapto(showRetInapto);
        
        setTimeout(function(){
            $("#page-wrapper").scrollTo(0);
        },500);
        
        
        $('#popinss').find('input').click(function(){
            var $input = $(this);
            var reset = true;
            if($input.val() == '3'){
                reset = false;
            }
            sumulaINSS(reset);
        });
        
    });
    
</script>
