<?php
/**
  + =============================================================================
  | Partial-form de Contatos
  |
 *  INSTRUÇÕES:
 * 
 * noAddContato => (lista) Não exibe campo de adição de novo contato na listagem
 * noContatoField' => (campos) Não exibe o campo do nome do contato
 * noContatoList' => Não exibe o campo do nome do contato QUANDO LISTA
 * noList' => Mesmo quando edição, a lista não será exibida. Apenas os campos de contato serão exibidos
 * 
 * noPrefix' => Não prefixa o contato
 * noDeleteContatos' => Não permite deletar o contato
 * noTitle => Não exibe o titulo do partial
 * 
 * @author Danilo Dorotheu <danilo.dorotheu@live.com>
 * @since 11-07-2016
 */
/* @var $fh \Application\View\Helper\FormHelp */
$fh = &$obj;

$controller = $d['this']->dataView['controller'];
$route      = $d['this']->dataView['route'];
$action     = $d['this']->dataView['action'];
$entity     = $d['this']->entity;

$dataToJs   = array();

$titleFieldSet = (!isset($d['noTitle'])) ? "Contatos" : "";
$fh->renderFieldsetIni($titleFieldSet);

!isset($d['noPrefix']) and $fh->setPrefix('contato'); // -----------------------| OPEN PREFIX |--

/**
 * Quando edição, então será retornada uma lista contendo todos os contatos
 * junto ao seus meios de contato.
 * OBS: Quando o parametro 'noList' é declarado na chamada do partial, então ao 
 * invés de exibir a listagem, serão exibidos os campos de contato novamente.
 */
if ("edit" == $action and ! isset($d['noList'])) {

    if (!isset($d['noContatoList'])) {
        $fh->openCol(4)->text('nomeContato')->closeCol();
        $dataToJs['nomeContato'] = $fh->getLastId();

        $fh->openCol(2);
        $fh->buildButton(['id' => 'addContato', 'style' => 'margin-top: 25px'], "Adicionar", 'primary', TRUE);
        $fh->closeCol();
    }

    $fh->openCol(10, ["id" => "listaContatos"])->closeCol();
    
}
/**
 * Quando new ou quando o parametro 'noList' for definido, os campos de contato 
 * serão exibidos para cadastro
 */ 
else {
    !isset($d['noContatoField']) and $fh->openCol(6)->text('nomeContato')->closeCol()->lineDown();

    $fh->setPreFix('meioContato');       //--------------------| OPEN PREFIX |--
    
    // --| TELEFONE | -----------------------
    if (!isset($d['show']) or in_array("telefone", $d['show'])) {
        $fh->openCol(3)->text('meioDeContato[telefone]', ['mask' => '(99) 9999-9999'])->closeCol();
        $dataToJs['telefone'] = $fh->getLastId();
    }

    // --| CELULAR | ------------------------
    if (!isset($d['show']) or in_array("celular", $d['show'])) {
        $fh->openCol(3)->text('meioDeContato[celular]', ['mask' => '(99) 99999-9999'])->closeCol();
        $dataToJs['celular'] = $fh->getLastId();
    }

    // --| EMAIL | --------------------------
    if (!isset($d['show']) or in_array("celular", $d['show'])) {
        $fh->openCol(6)->text('meioDeContato[email]')->closeCol();
        $dataToJs['email'] = $fh->getLastId();
    }

    // --| OUTROS | -------------------------
    # Adicionar outros aqui

    $fh->removePreFix('meioContato');    //-------------------| CLOSE PREFIX |--  
}

!isset($d['noPrefix']) and $fh->removePreFix('contato'); //---------------------| CLOSE PREFIX |--  
$fh->renderFieldsetFim();

// Transforma o nome da entidade em string de caixa baixa.
if (is_object($entity)) {
    $arrayPath = explode('\\', get_class($entity));
    $aux = array_pop($arrayPath);
    $dataToJs['nameEntity'] = strtolower($aux);
}

$fields = array_merge($dataToJs, array(
    "idEntity" => (is_object($entity)) ? $entity->getId() : 0,
    "noDeleteContatos" => !isset($d['noDeleteContatos']) ? "1" : "0",
    "deleteContato" => isset($d['noContatoList']) ? "hide" : "show"
));

?>
<script type="text/javascript">
    $(function () {
        var fields = <?php echo json_encode($fields) ?>;

        /**
         * Atualiza a lista de contatos
         */
        function refreshLista() {
            $.processa({
                url: "<?php echo $d['this']->url($route, array('controller' => "contatos", 'action' => 'index'), [], FALSE, FALSE); ?>",
                savePage: false,
                type: "POST",
                data: {
                    id: fields.idEntity,
                    entity: fields.nameEntity,
                    deleteContato: fields.deleteContato,
                    subOpcao: "renew"
                },
                ret: "#listaContatos"
            });
        }

        /**
         * Adiciona contatos na lista de contato 
         */
        $('#addContato').click(function () {
            var nomeContato = $$(fields.nomeContato).val();
            $$(fields.nomeContato).val("")
            $.processa({
                url: "<?php echo $d['this']->url($route, array('controller' => 'contatos', 'action' => 'adicionarContato'), [], FALSE, FALSE); ?>",
                type: "POST",
                savePage: false,
                data: {
                    nomeContato: nomeContato,
                },
                ret: "#listaContatos"
            });
        });
        
        if(0 < fields.idEntity){
            refreshLista();
        }
        
    });
</script>