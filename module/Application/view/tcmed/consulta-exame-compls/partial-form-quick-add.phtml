<?php
/* @var $fh \Application\View\Helper\FormHelp */
$fh = &$obj;
$controllerExamCompl = 'consultaExameCompls';

$horizontal = $fh->getHorizontal();
$fh->setHorizontal(FALSE);
$fh->renderFieldsetIni('Incluir Exames Complementares ',['fAtrb' => 'id="fieldOfExamesCompl"'])->setPreFix('consultaExameCompl');
$fh->renderHiddenFor('consultaExameCompl');
$consultaExameComp = $fh->getIdFor('idConsultaExameCompl');
$funcionario = $fh->getIdFor('funcionario');
$empresa     = $fh->getIdFor('empresa');
$consulta    = $fh->getIdFor('consulta');
$exameCompl  = $fh->getIdFor('exameCompl');  
    $fh->openCol('4')->renderInputText('exameComplDes')->closeCol();
        $exameComplDesc = $fh->getLastId();
    $fh->openCol('2')->renderInputRadio('resultado')->closeCol();
        $resultado = $fh->getLastId();
    $fh->openCol('2')->renderInputCalend('data')->closeCol();
        $data = $fh->getLastId();
    $fh->openCol('4')->renderInputTextArea('observacao')->closeCol();
        $obs = $fh->getLastId();
    
$fh->lineDown();    
    $fh->openCol('12')->renderInputButtonOnly('addExameComplInFC',['id' => 'btnEnviaExameComplementar'])->closeCol();

$fh->closeLine();

$fh->renderFieldsetFim()->removePreFix();   
$fh->setHorizontal($horizontal);
?>

<script lang="javascript">
    
    // var global com funcao de editar exames complementares.
    var editConsultaExameComp = function(){};
    // var global com funcao de remover exames complementares.
    var delConsultaExameComp = function(){};
    
    /**
     * Onload do jquery
     *  
     */
    $(function () {
        

        var consultaExameComp    = "<?php  echo $consultaExameComp    ; ?>";
        var funcionario    = "<?php  echo $funcionario    ; ?>";
        var empresa        = "<?php  echo $empresa        ; ?>";
        var consulta       = "<?php  echo $consulta       ; ?>";
        var exameCompl     = "<?php  echo $exameCompl     ; ?>";
        var exameComplDesc = "<?php  echo $exameComplDesc ; ?>";
        var data           = "<?php  echo $data           ; ?>";
        var resultado      = "<?php  echo $resultado      ; ?>";
        var observacao     = "<?php  echo $obs            ; ?>";
        /**
         * Pega somente o fieldset de exameCompl e monta os inputs para inserção no banco
         * Depois limpa os campos da tela para nao fazer inserção em duplicidade
         * 
         * @author Paulo Watakabe <watakabe05@gmail.com>
         * @version 1.0
         */
        var saveExameComplInFichaClinica = function (){
            keepDefaultDataExComp();
            var obj = {
                data : $("#fieldOfExamesCompl").serializeObject(),
                type : "POST",
                url  : "<?php echo $d['this']->url('tcmed/default', array('controller' => $controllerExamCompl, 'action' => 'quickSave'), [], FALSE, FALSE); ?>",
                ret  : "#listaExaCompl",
                savePage : false
            };
            action.processa(obj);
            action.getEl(funcionario ).val(defaultDataExComp.funcionario);
            action.getEl(empresa     ).val(defaultDataExComp.empresa    );
            action.getEl(consulta    ).val(defaultDataExComp.consulta   );
            action.getEl(consultaExameComp).val("");
            action.getEl(exameCompl).val("");
            action.getEl(exameComplDesc).val("");
            action.getEl(data).val("");
            var resultados = document.getElementsByName(resultado);   
            var key;
            for (key in resultados) {
                resultados[key].checked = false;
            }
            action.getEl(observacao).val("");
            bkpTbody = "";
        };
        
        $('#btnEnviaExameComplementar').click(saveExameComplInFichaClinica);

        var defaultDataExComp = "";
        var keepDefaultDataExComp = function(){
            if(defaultDataExComp === ""){
                defaultDataExComp = {
                    consulta     : $$(consulta    ).val(),
                    empresa      : $$(empresa     ).val(),
                    funcionario  : $$(funcionario ).val()
                };
            }
        };

        /**
         * Edita os dados de um registro da listagem
         * Faz backup do tbody atual
         * busca no BD os dados do registro passando o id como parametro e recebendo um array de dados
         * Recebe o array de dados e seta os inputs com os dados recebido
         * Remove o tr da listagem demostrando que ele esta sendo editado
         * Caso o usuario desista de editar o registro e edit outro o tr removido será recolocado.
         * 
         * @author Paulo Watakabe <watakabe05@gmail.com>
         * @version 1.0
         */
        var bkpTbody = "";
        editConsultaExameComp = function(key, spn){ 
            keepDefaultDataExComp();
            if(bkpTbody != ""){
                $(spn).parent().parent().parent().html(bkpTbody); 
                bkpTbody = "";
            }
            var obj = {
                type     : "GET",
                url      : "<?php echo $d['this']->url('tcmed/default', array('controller' => $controllerExamCompl, 'action' => 'quickEdit'), [], FALSE, FALSE); ?>" + "/" + key,
                callback : function(val){
                    var dados = eval(val);
                    if(dados[0] == "error"){
                        if(dados[1] != ""){
                            alert(dados[1]);
                        }
                        return;
                    }
                    action.getEl(funcionario).val(dados[0]);
                    action.getEl(empresa).val(dados[1]);
                    action.getEl(consulta).val(dados[2]);
                    action.getEl(exameCompl).val(dados[3]);
                    action.getEl(exameComplDesc).val(dados[4]);
                    action.getEl(data).val(dados[5]);
                    var resultados = document.getElementsByName(resultado);                
                    for (var key in resultados) {
                        if(resultados[key].value == dados[6]){
                            resultados[key].checked = true;
                        }
                    }
                    action.getEl(observacao).val(dados[7]);
                    action.getEl(consultaExameComp).val(dados[8]);
                },
                savePage : false
            };
            action.processa(obj);       
            var tr = $(spn).parent().parent(); 
            bkpTbody = $(tr).parent().html();
            tr.fadeOut(400, function(){
                tr.remove();
            });
        };
        /**
         * Deleta o registro do BD passando como parametro o Id do registro
         * Faz um confirmação antes e atualiza a listagem da tela
         *  
         * @author Paulo Watakabe <watakabe05@gmail.com>
         * @version 1.0
         */ 
        delConsultaExameComp = function(key){
            var msg = "Deseja mesmo excluir este registro?";
            gModal.confirm(msg,function(){
                var obj = {
                    data : $("#fieldOfExamesCompl").serializeObject(),
                    type : "POST",
                    url  : "<?php echo $d['this']->url('tcmed/default', array('controller' => $controllerExamCompl, 'action' => 'quickDelete'), [], FALSE, FALSE); ?>" + "/" + key,
                    ret  : "#listaExaCompl",
                    savePage : false
                };
                action.processa(obj);
                bkpTbody = "";
            })
        };

        var fieldsExmCmpl = {
            idExame: exameCompl ,
            exame: exameComplDesc 
        };
        /* AUTOCOMPLETE: exame complementar */
        $$(fieldsExmCmpl.exame).auto({
            primary: "exame",
            width : 300,
            serviceUrl: "<?php echo $d['this']->url('tcmed/default', array('controller' => 'ExameCompls', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            filters: function(query){
                query["subOpcao"] = "";
            },
            responseTo: {
                idExame : [fieldsExmCmpl.idExame]
            }
        });
    });

</script>