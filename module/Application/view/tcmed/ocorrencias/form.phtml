<?php
/**
 * @author Danilo Dorotheu <danilo.dorotheu@live.com>
 * @since 29/12/2015
 */
//
// == DEFINIÇÕES ===============================================================
//
/**
 * @var string Controller responsável por esta view
 */
$controller = $this->dataView['controller'];
/**
 * @var string Rota responsável por esta view 
 */
$route = $this->dataView['route'];
/* @var $fh \Application\View\Helper\FormHelp */
/*
 * Form Help
 */
$fh = $this->formHelp($this, $this->form, $this->url($route, array('controller' => $controller, 'action' => $this->dataView['action']), [], FALSE, $this->dataView['ajax']));
// ===================================================================== FIM ===
//
//
//
// === CABEÇALHO DA PAGINA =====================================================
echo "<h2>", $this->dataView['titulo'], "</h2><br>";
// ===================================================================== FIM ===
// 
// 
// === DADOS DO FUNCIONARIO ====================================================
$partialObject = $this->partialObj('tcmed');

$fh->formInit('Dados do Funcionario', ["noPreFormInit" => TRUE]);

$idOcorrencia = $fh->getIdFor('idOcorrencia');

$fh->openCol(12);
$partialObject->partial('empresas/partial-form-all', $fh, ['this' => &$this]);
$fh->closeCol();

$fh->lineDown();   // --------------------------------------| PULA LINHA |--

$fh->setPreFix('funcionario');
$idFuncionario = $fh->getIdFor('idFuncionario');

$fh->openCol(3)->number('referenciaFun')->closeCol();
$referenciaFun = $fh->getLastId();

$fh->openCol(5)->text('nomeFuncionario', [
    "extra" => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"],
    "dt-clear" => join(",", array($idFuncionario, $referenciaFun)),
])->closeCol();
$nomeFuncionario = $fh->getLastId();
$fh->removePreFix('funcionario');

$fh->jumpLine(2);

$fh->renderFieldsetFim(); // ===============================================
$fh->renderFieldsetIni('Dados da Ocorrência'); // ==========================

$fh->setHorizontal(TRUE);

$fh->openCol(6)->text('assunto')->closeCol();
$fh->openCol(6)->calend('dtAcomp')->closeCol();
$dtAcomp = $fh->getLastId();

$fh->lineDown();   // --------------------------------------| PULA LINHA |--

$fh->openCol(12)->textarea('descricao')->closeCol();

$fh->jumpLine(2);
$fh->setHorizontal(FALSE);

$fh->renderFieldsetFim(); // ===============================================
$fh->renderFieldsetIni('Usuários Relacionados'); // ========================

$userLista = $fh->getIdFor('usuario');

$fh->lineDown();   // --------------------------------------| PULA LINHA |--

$fh->openCol(4)->text('nomeUsuario')->closeCol();
$nomeUsuario = $fh->getLastId();

$fh->lineDown();   // --------------------------------------| PULA LINHA |--

$fh->openCol(12, ["id" => "lista-usuarios"])->closeCol();

$fh->jumpLine(2);   // --------------------------------------| PULA LINHA |--

$fh->openCol(2, 5);
$fh->buildButton(["id" => "salvar", "class" => "btn-block"], "Salvar dados", "success", TRUE);
$fh->closeCol();

$fh->jumpLine(2);
$fh->renderFieldsetFim();
$fh->formEnd();

// === TRANSPORTE ==============================================================
/**
 * @var fields Array de conversao do PHP para JS
 */
$fields = [
    "idFuncionario" => $idFuncionario,
    "dtAcomp" => $dtAcomp,
    "idOcorrencia" => $idOcorrencia,
    "usuario" => $usuario,
    "nomeUsuario" => $nomeUsuario,
    "nomeFuncionario" => $nomeFuncionario,
    "referenciaFun" => $referenciaFun,
    "userlista" => $userLista,
    "empresa" => $partialObject->fieldsEmpresa
];

// ===================================================================== FIM ===
?>
<script lang="javascript">


    // Modulo de gerencia de usuários em multiplos forms
    var gerUsuarios = (function () {

        var $public = {};
        var $private = {};

        $public.getUsuarios = function () {
            var data = $("#usuario").val();
            var aux = JSON.parse(data);

            // Obriga o retorno dos itens do array ser do tipo INT
            return $.map(aux, function (val) {
                return parseInt(val);
            });
        };

        $private.setUsuarios = function (data) {
            $("#usuario").val(JSON.stringify(data));
        };

        $public.atualizaLista = function () {
            $.processa({
                url: "<?php echo $this->url($route, array('controller' => 'ocorrencias', 'action' => 'getListUsuarios'), [], FALSE, FALSE); ?>",
                type: "POST",
                data: {
                    listaUsuarios: JSON.stringify($public.getUsuarios())
                },
                ret: "#lista-usuarios",
                savePage: false,
            });
        };

        $public.addUsuario = function (id) {
            var lista = $public.getUsuarios(); //transforma string em array
            if (-1 < $.inArray(id, lista)) {
                $.notify({message: "Usuário já está na lista!", type: "danger"})
                return false;
            }

            lista.push(id);
            $private.setUsuarios(lista);
            $public.atualizaLista();
        };

        $public.removeUsuario = function (id) {
            if (confirm("Deseja realmente remover este usuário da lista?")) {
                var lista = $public.getUsuarios(); //transforma string em array
                var index = $.inArray(parseInt(id), lista);
                lista.splice(index, 1);
                $private.setUsuarios(lista);
                $public.atualizaLista();
            }
        };

        $public.init = function () {
            $public.atualizaLista();
        };

        return $public;
    })();

    function isValid(fields) {
        var lista = gerUsuarios.getUsuarios();
        var date = $$(fields.dtAcomp).val();

        if (lista.length == 0 && "" != date) {
            $.notify({message: "Somente é possivel salvar ocorrencia sem usuários quando a nenhuma data de acompanhamento for definida", type: "danger"});
            return false;
        }
        return true;
    }

    /**
     * @memberOf Ocorrencias
     * @private
     */
    $(function () {


        // =====================================================================
        /**
         * @property {Object} fields Campos de transferencia do PHP, que serão
         * utilizados no javascript
         */
        var fields = <?php echo json_encode($fields) ?>;
        /**
         * @property {string} idOcorrencia ID da ocorrencia
         */
        var idOcorrencia = $$(fields.idOcorrencia).val();
        // =====================================================================
        gerUsuarios.init();

        $$(fields.nomeUsuario).auto({
            primary: "nomeUsuario",
            width: 500,
            serviceUrl: "<?php echo $this->url('app/default', array('controller' => 'Usuarios', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            noCache: true,
            callback: function (usuario) {
                gerUsuarios.addUsuario(usuario.idUsuario);
                $$(fields.nomeUsuario).val("").focus();
            },
            showCols: ["nomeUsuario", "emailUsuario"]
        });
        // =====================================================================

        $("#salvar").click(function () {
            if (!isValid(fields)) {
                return false;
            }

            $(this).closest("form").processa({
                url: "<?php echo $this->url($route, array('controller' => 'ocorrencias', 'action' => $this->dataView['action']), [], FALSE, FALSE); ?>",
                type: "POST",
            });

        });

        /**
         * Autocomp Funcionario
         */
        $$(fields.nomeFuncionario).auto({
            primary: "nomeFuncionario",
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Funcionarios', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            filters: function (data) {
                data.rules = {
                    "empresa": $$(fields.empresa.idEmpresa).val()
                };
                return data;
            },
            params: {
                subOpcao: "new"
            },
            responseTo: {
                "idFuncionario": [fields.idFuncionario],
                "referenciaFun": [fields.referenciaFun],
                "idAdministradora": [fields.empresa.idAdministradora],
                "razaoSocialAdm": [fields.empresa.razaoSocialAdm],
                "idEmpresa": [fields.empresa.idEmpresa],
                "referenciaEmp": [fields.empresa.referenciaEmp],
                "razaoSocialEmp": [fields.empresa.razaoSocialEmp],
                "referenciaSubhold": [fields.empresa.referenciaSubhold],
                "cnpj": [fields.empresa.cnpj],
                "fantasiaHold": [fields.empresa.fantasiaHold]
            },
            showCols: ["referenciaFun", "nomeFuncionario", "rg"]
        });

    });

</script>

