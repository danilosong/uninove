<?php
/* @var $fh \Application\View\Helper\FormHelp */
/* @var $entGuia \Tcmed\Entity\Guia */
/* @var $form \Tcmed\Form\Guia */
$controller = 'guias';
$route = 'tcmed/default';
/* @var $acl \Application\View\Helper\Acl */
$acl = $this->Acl();

$entGuia = $this->entity;
$form = $this->form;
$id = ($entGuia) ? $entGuia->getId() : 0 ;
/**
 * @var boolean Acesso do usuário em Agenda
 */
$autoCompClinica = $acl('tcmed:clinicas:autoCompGuia', 'allow');
if($entGuia AND $entGuia->getFuncionario()){
    $form->disableInputsOfFuncionario();
}
$fh = $this->formHelp($this, $form, $this->url($route, array('controller' => $controller, 'action' => $this->dataView['action']), [], FALSE, $this->dataView['ajax']));
/**
 * @var array Mensagens do servidor que serão lidas na view
 * OBS: Após ler mensagens, fila é apagada
 * @see javascript::createMessages
 */
$messages = $this->flashMessenger()->getCurrentAllMessages();
$this->flashMessenger()->clearCurrentAllMessages();
/* @var $entity \Tcmed\Entity\Guia */
$entity = ($this->entity) ? $this->entity : FALSE;
// === CABEÇALHO DA PAGINA =====================================================
echo "<h2>", $this->dataView['titulo'], "</h2><br>";?>
<p>
    <button class="btn btn-primary" onclick="<?php echo $this->url($route, array('controller' => $controller, 'action' => 'index')); ?>">Voltar</button>
    <button class="btn btn-primary" onclick="<?php echo $this->url($route, array('controller' => $controller, 'action' => 'new')); ?>">Novo</button>
    <button class="btn btn-primary" onclick="<?php echo $this->url($route, array('controller' => $controller, 'action' => 'new')); ?>">Limpar</button>
</p>
<?
$fh->formInit('Selecione o tipo de Exame:(Obrigatorio)');
// ===================================================================== FIM ===
$fh->setHorizontal(TRUE);
$fh->openCol(12)->radio("tipo",['spanLabel' => ''])->closeCol()->setHorizontal(FALSE);
$fh->closeLine()->setHorizontal(false);
$fh->renderFieldsetFim()->renderFieldsetIni('Dados do Empresa');


$idGuia = $fh->getIdFor('idGuia');
// ===================================================================== FIM ===
// === DADOS DO EMPRESA  ====================================================
$fh->openCol(12);
$partial = $this->partialObj('tcmed');
$partial->partial('empresas/partial-form-all', $fh, ['this' => &$this]);
$fh->closeCol();
// === DADOS DA CLINICA  ====================================================
$fh->lineDown();
$fh->setPreFix('clinica');
$idClinica = $fh->getIdFor('idClinica');
$opt = ['dt-clear' => $idClinica];
$att = ['label' => 'Clinica para o Exame:'];
if($autoCompClinica){
    $opt['extra'] = ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"];
}else{
    $att['disabled'] = true;
}
$fh->openCol(9,3)->text('fantasiaClinica', $opt, $att)->closeCol();
$fantasiaClinica = $fh->getLastId();
$fh->removePreFix('clinica');
$fh->closeLine();

// === DADOS DO FUNCIONARIO ====================================================
$fh->renderFieldsetFim()->renderFieldsetIni('Dados do Funcionário');
$idFuncionario = $fh->getIdFor('idFuncionario');
$fh->openCol(3)->text('referenciaFun')->closeCol();
$referenciaFun = $fh->getLastId();
$fh->openCol(9)->text('nomeFuncionario', 
        [
            "extra" => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"]
            ,'dt-clear' => $idFuncionario
        ]
        )->closeCol();
$nomeFuncionario = $fh->getLastId();
$fh->renderFieldsetFim();
// ===================================================================== FIM ===
$fh->lineDown()->openCol(12)->setHorizontal(false);
    // ===============================================================================>  DADOS DE OCUPACAO OLD
    echo '<div id="show-old-funcao">';

    $fh->renderFieldsetIni('Ocupacao atual');

    $fh->setPreFix('ocupacao');
    $idOcupacao = $fh->getIdFor('idOcupacao');

    $fh->setPreFix('setor');
    $idSetor = $fh->getIdFor('idSetor');

    $fh->openCol(4)->text('nomeSetor', [
        'dt-clear' => $idSetor,
        "extra"    => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"]
    ])->closeCol();
    $nomeSetor = $fh->getLastId();
    $fh->removePreFix('setor');

    $fh->setPreFix('cargo');
    $fh->openCol(4)->text('cargo',[
        "extra" => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"]
    ])->closeCol();
    $cargo = $fh->getLastId();

    $fh->openCol(4)->text('cbo')->closeCol();
    $cbo = $fh->getLastId();
    $fh->removePreFix('cargo');

    $fh->removePreFix("ocupacao");
    $fh->renderFieldsetFim();

    echo "</div>";
$fh->closeCol()->lineDown()->openCol(12);    
    // === DADOS DE OCUPACAO ATUAL =================================================
    $show = (isset($isMudancaFuncao) && $isMudancaFuncao) ? "" : "hideOn";
    echo '<div id="show-new-funcao" class="' . $show . '">';

    $fh->renderFieldsetIni('Nova Ocupaçao');
    $fh->setPreFix("newOcupacao");
    $newOcupacao = $fh->getIdFor('idOcupacao');

    $fh->setPreFix('setor');
    $newIdSetor = $fh->getIdFor('idSetor');

    $fh->openCol(4)->text('nomeSetor', [
        'dt-clear' => $newIdSetor,
        "extra"    => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"]
    ])->closeCol();
    $newNomeSetor = $fh->getLastId();
    $fh->removePreFix('setor');

    $fh->setPreFix('cargo');
    $idCargo = $fh->getIdFor('idCargo');
    $fh->openCol(4)->text('cargo',[
        "extra" => ["icon" => "search", "class" => "list-all-autocomp", "title" => "buscar todos"]
    ])->closeCol();
    $newCargo = $fh->getLastId();

    $fh->openCol(4)->text('cbo')->closeCol();
    $newCbo = $fh->getLastId();
    $fh->removePreFix('cargo');

    $fh->removePreFix("ocupacao");
    $fh->renderFieldsetFim();
    echo "</div>";
    // ===================================================================== FIM ===
$fh->closeCol();
$fh->closeLine();
// === DADOS DO FUNCIONARIO ====================================================
$fh->renderFieldsetIni('Dados do Funcionário');


    $fh->openCol('6')->cpf('cpf')->closeCol();
    $cpf = $fh->getLastId();

    $fh->openCol('6')->text('rg')->closeCol();
    $rg = $fh->getLastId();

$fh->lineDown();

    $fh->openCol('6')->pis('pis')->closeCol();
    $pis = $fh->getLastId();

    $fh->openCol('6')->select('sexo')->closeCol();
    $sexo = $fh->getLastId();
    
$fh->lineDown();

    $fh->openCol('6')->calend('dtAdmissao')->closeCol();
    $dtAdmissao = $fh->getLastId();

    $fh->openCol('6')->calend('dtNascimento')->closeCol();
    $dtNascimento = $fh->getLastId();

$fh->lineDown();

    $fh->openCol('6')->text('matricula')->closeCol();
    $matricula = $fh->getLastId();
    
    $fh->openCol('6')->text('carteiraProfissional')->closeCol();
    $carteiraProfissional = $fh->getLastId();

$fh->lineDown();

$fh->renderFieldsetFim();
// === RODAPE ==================================================================
$fh->openCol(2, 5)->Submit('submit', 0, ["class" => "btn-block btn-success btn"])->closeCol();
$fh->closeLine();
$fh->formEnd();
// ===================================================================== FIM ===
//
//
?><br><br><?php
//
//
// === TRANSPORTE ==============================================================
$fieldsGuia = [
    "nomeFuncionario" => $nomeFuncionario,
    "referenciaFun" => $referenciaFun,
    "rg" => $rg,
    "matricula" => $matricula,
    "cpf" => $cpf,
    "sexo" => $sexo,
    "dtNascimento" => $dtNascimento,
    "dtAdmissao" => $dtAdmissao,
    "pis" => $pis,
    "carteiraProfissional" => $carteiraProfissional,
    "fantasiaClinica" => $fantasiaClinica,
    "idClinica" => $idClinica,
    "idFuncionario" => $idFuncionario,
    "idOcupacao" => $idOcupacao,
    "newOcupacao" => $newOcupacao,
    "cargo" => $cargo,
    "idCargo" => isset($idCargo) ? $idCargo : FALSE,
    "newCargo" => $newCargo,
    "newIdSetor" => $newIdSetor,
    "newNomeSetor" => $newNomeSetor,
    "idSetor" => $idSetor,
    "nomeSetor" => $nomeSetor,
    "cbo" => $cbo,
    "newCbo" => $newCbo,
    "autoCompClinica" => $autoCompClinica,
    "isMudancaFuncao" => isset($isMudancaFuncao) ? $isMudancaFuncao : false,   
    "tipo" => 'tipo'
];

$fieldsGuia = array_merge($partial->fieldsEmpresa, $fieldsGuia);
// ===================================================================== FIM ===
?>
<script lang="javascript">
    var fieldsGuias = <?php echo json_encode($fieldsGuia) ?>;
    function isValid() {
        return true;
    }
    
    var cleanClinica = function(){
        $$(fieldsGuias.idClinica).val("");
        $$(fieldsGuias.fantasiaClinica).val("");
    };
    
    var updateClinica = function(obj){
        if($$(fieldsGuias.idEmpresa).val() == ''){
            return;
        }
        cleanClinica();
        $.processa({
            url  : "<?php echo $this->url('tcmed/default', array('controller' => $controller, 'action' => $this->dataView['action']), [], FALSE, FALSE); ?>",
            type : 'POST',
            frm  : true,
            data : {
                subOpcao      : 'loadCad'
            }
        });
    };

    $(function () {
        var fields = <?php echo json_encode($fieldsGuia) ?>;
        
        $$(fields.cpf).addClass("mask-cpf");

        function getFantasiaHold() {
            var fantasiaHold = $$(fields.nomeHold);
            return (fantasiaHold.find("option:selected").val()
                    == fantasiaHold.find("option:first").val()) ?
                    "" : fantasiaHold.find("option:selected").text();
        }

        $('input[name="tipo"]').click(function () {
            if ($('input[value="MDF"]').prop("checked")) {
                $("#show-new-funcao").show();
            } else {
                $("#show-new-funcao").hide();
            }
        });
        if ($('input[value="MDF"]').prop("checked")) {
            $("#show-new-funcao").show();
        }
        
        /*
         * Altera a funcao padrão do callback run do partial form de empresas
         * @returns {nothing}         
         */
        window.funcaoCallBackPartialEmpresa.run = function(){
            cleanClinica();
            $$(fields.idFuncionario).val('');
            $$(fields.nomeFuncionario).val('');
            $.processa({
                url  : "<?php echo $this->url($route, array('controller' => $controller, 'action' => $this->dataView['action'], 'id' => $id), [], FALSE, FALSE); ?>",
                frm  : true,
                savePage: false,
                data : {
                    'subOpcao' : 'loadCad'
                }
            });
        };         
        /*
         * Altera a funcao padrão do callback cleanEmpresa do partial form de empresas
         * @returns {nothing}         
         */
        window.funcaoCallBackPartialEmpresa.cleanEmpresa = function(){
            var imputs = [fields['idAdministradora'],fields['fantasiaHold'],fields['referenciaSubhold'],fields['razaoSocialAdm']];
            var post = {subOpcao : 'loadCad', id : '<?= $id; ?>'};
            $.each(imputs,function(ind, val){
                post[val] = $$(val).val();
            });
            var $radio = $("input[name='" + fields['tipo'] + "']:checked");
            if ($radio.length > 0){
                var key = fields['tipo'];             
                post[key] = $radio.val();
            }
            $.processa({
                url  : "<?php echo $this->url($route, array('controller' => $controller, 'action' => $this->dataView['action'], 'id' => $id), [], FALSE, FALSE); ?>",
                savePage: false,
                type : 'POST',
                data : post
            });
        }; 
        /*
         * Atach uma funçao para o botao limpar do nome do funcionario
         */
        $$('#clean_nomeFuncionario').find('button').eq(0).click(function () {
            if($$(fields.idFuncionario).val() == ''){
                return;
            }
            var imputs = [
                fields['idAdministradora']
                ,fields['fantasiaHold']
                ,fields['referenciaSubhold']
                ,fields['razaoSocialAdm']
                ,fields['idEmpresa']
                ,fields['razaoSocialEmp']
            ];
            var post = {subOpcao : 'loadCad', id : '<?= $id; ?>'};
            $.each(imputs,function(ind, val){
                post[val] = $$(val).val();
            });
            var $radio = $("input[name='" + fields['tipo'] + "']:checked");
            if ($radio.length > 0){
                var key = fields['tipo'];             
                post[key] = $radio.val();
            }
            $.processa({
                url  : "<?php echo $this->url($route, array('controller' => $controller, 'action' => $this->dataView['action'], 'id' => $id), [], FALSE, FALSE); ?>",
                savePage: false,
                type : 'POST',
                data : post
            });
        });

        /*
         * Autocomp de Funcionario
         */
        $$(fields.nomeFuncionario).auto({
            primary: "nomeFuncionario",
            width: 900,
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Funcionarios', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            params: {
                subOpcao : 'type1',            
            },
            filters: function (data) {
                data.rules = {
                    "empresa": $$(fields.idEmpresa).val()
                };
            },
            callback: function (data) {
                cleanClinica();
                $.processa({
                    url  : "<?php echo $this->url('tcmed/default', array('controller' => $controller, 'action' => $this->dataView['action']), [], FALSE, FALSE); ?>",
                    type : 'POST',
                    frm  : true,
                    data : {
                        subOpcao      : 'loadCad',
                        funcionario : data["idFuncionario"]
                    }
                });
            },
            showCols: ["referenciaFun", "nomeFuncionario", "rg", "cpf", "fantasiaAdm", "fantasiaEmpresa"]
        });

        $$(fields.nomeSetor).auto({
            primary: "nomeSetor",
            width: 300,
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Setors', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            noCache: true,
            responseTo: {
                "idSetor": [fields.idSetor]
            },
            filters: function (query) {
                query["idEmpresa"] = $$(fields.idEmpresa).val();
            }
        });

        //função para filtrar os pedidos no formulario do produto
        $$(fields.cargo).auto({
            primary: "cargo",
            width : 500,
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Ocupacaos', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            noCache: true,
            responseTo: {
                nomeSetor:      [fields.nomeSetor]
                ,cbo:           [fields.cbo]
                ,cargo:         [fields.cargo]
                ,idCargo:       [fields.idCargo]
                ,idOcupacao:    [fields.idOcupacao]
            },
            filters: function (query) {
                query["idSetor"]   = $$(fields.idSetor).val();
            },
            showCols: ["nomeSetor", "cargo", "cbo"]
        });
        
        $$(fields.cbo).auto({
            primary: "cbo",
            width: 500,
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Ocupacaos', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            noCache: true,
            responseTo: {
                cargo: [fields.cargo],
                nomeSetor: [fields.nomeSetor],
                idOcupacao: [fields.idOcupacao]
            },
            filters: function (query) {
                query.rules = {
                    "idEmpresa" : $$(fields.idEmpresa).val()
                    ,"idSetor"   : $$(fields.idSetor).val()
                };
            },
            showCols: ["nomeSetor", "cargo", "apelido", "cbo"]
        });

        $$(fields.newCargo).auto({
            primary: "cargo",
            width: 500,
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Ocupacaos', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            responseTo: {
                nomeSetor: [fields.newNomeSetor],
                cbo: [fields.newCbo],
                idOcupacao: [fields.newOcupacao]
            },
            callback: function(data) {
                console.log(data);
            },        
            filters: function (query) {
                query["idEmpresa"] = $$(fields.idEmpresa).val();
                query["idSetor"]   = $$(fields.newIdSetor).val();
            },
            showCols: ["nomeSetor", "cargo", "apelido", "cbo"]
        });

        $$(fields.newNomeSetor).auto({
            primary: "nomeSetor",
            width: 300,
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Setors', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            noCache: true,
            responseTo: {
                "idSetor": [fields.newIdSetor]
            },
            filters: function (query) {
                query.rules = {
                    "idEmpresa" : $$(fields.idEmpresa).val()
                };
            },
        });

        $$(fields.newCbo).auto({
            primary: "cbo",
            width: 500,
            serviceUrl: "<?php echo $this->url('tcmed/default', array('controller' => 'Ocupacaos', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
            noCache: true,
            responseTo: {
                cargo: [fields.newCargo],
                nomeSetor: [fields.newNomeSetor],
                idOcupacao: [fields.newOcupacao]
            },
            filters: function (query) {
                query.rules = {
                    "idEmpresa" : $$(fields.idEmpresa).val()
                    ,"idSetor"   : $$(fields.newIdSetor).val()
                };
            },
            showCols: ["nomeSetor", "cargo", "apelido", "cbo"]
        });
        
        /**
         * autocomp para clinica
         * @author Paulo Cordeiro Watakabe <watakabe05@gmail.com>
         * @since 27-09-2016
         */
        if(fields.autoCompClinica){
            $$(fields.fantasiaClinica).auto({
                primary: "razaoSocial",
                width: 1000,
                serviceUrl: "<?php echo $this->url($route, array('controller' => 'clinicas', 'action' => 'autoComp'), [], FALSE, FALSE); ?>",
                noCache: true,
                callback: function (data) {
                    $$(fields.idClinica).val(data.idClinica);
                    $$(fields.fantasiaClinica).val(data.fantasiaClinica);
                },
                showCols: ["idClinica", "fantasiaClinica", "cnpj"]
            });
        }

//== MENSAGENS DO SISTEMA ==============================================
        /**
         * @see (PHP) flashMessenger
         * @property {object} messagesGroup Necessário para exibir mensagens 
         * na tela
         */
        var messagesGroup = <?php echo json_encode($messages) ?>;
        /**
         * @event Exibe as mensagens do servidor na view
         */
        $.each(messagesGroup, function (type, messages) {
            $.each(messages, function (_, message) {
                $.notify({
                    "message": message,
                    "type": type
                });
            });
        });
                //mascara de horas
        $$(fields.rg).mask("99.999.999-9");
// ========================================================== FIM ======
    });


</script>
