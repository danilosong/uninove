<?php
/* @var $fh \Application\View\Helper\FormHelp */
$fh = &$obj;

$horizontal = $fh->getHorizontal();
$fh->setHorizontal(TRUE);
$fh->renderFieldsetIni('Medições',['notOpenLine'=>TRUE, 'fAtrb' => 'id="fieldMedicoes"'])->setPreFix('questionario');


$inputsAntecedentes = $fh->getForm()->getPrefixInterrogatio(5);
foreach ($inputsAntecedentes as $prefix) { 
    $type = 'text';
    if(is_array($prefix)){
        $type   = $prefix[1];
        $prefix = $prefix[0];
    }  
    $fh->openLine()->setPreFix($prefix);
    switch ($type) {
        case 'float(1)':
            $fh->openCol('12')->renderInputFloat('resposta',['labelWidth' => '6', 'dec' => '1'])->closeCol();         
            break;
        case 'float(2)':
            $fh->openCol('12')->renderInputFloat('resposta',['labelWidth' => '6'])->closeCol();         
            break;
        case 'text':
            $fh->openCol('12')->renderInputText('resposta',['labelWidth' => '6'])->closeCol();         
            break;
        case 'integer':
            $fh->openCol('12')->renderInputFloat('resposta',['labelWidth' => '6'])->closeCol();         
            break;
        case 'textDuplo':
            $fh->openCol('8')->renderInputNumber('resposta[0]',['labelWidth' => '6'])->closeCol();         
            $fh->openCol('4')->renderInputNumber('resposta[1]',['noLabel' => TRUE])->closeCol();         
            break;
        default:
            break;
    }
    $fh->closeLine()->removePreFix();
}


$fh->renderFieldsetFim()->removePreFix();   
$fh->setHorizontal($horizontal);
?>

<script lang="javascript">
    

    // validar preenchimento dos campos medicoes 
    var isValidMedicoes = function(){
        var flag = true;      
        var $fieldMedicoes = $("#fieldMedicoes");
        removeAlert($fieldMedicoes);

        // validar medições 
        $fieldMedicoes.find(".row").each(function() {
            var $divRow = $(this);
            var inLabel = $divRow.find("label").html();
            var $txt     = $divRow.find("input[type=text]");
            if($txt.val() === ""){
                makeDivError($divRow.find("div:eq(0)"), inLabel);
                flag = false;
            }    
        });

        return flag;
    };

    var calcIMC = function(){  
        var $fieldMedicoes = $("#fieldMedicoes"); 
        var $fieldMedicoesRows = $fieldMedicoes.find(".row");
        var peso = $fieldMedicoesRows.eq(0).find('input').eq(0).val().replace(",","."); //pegar valor de peso com ponto
        var altura =$fieldMedicoesRows.eq(1).find('input').eq(0).val().replace(",","."); //pegar valor de peso com ponto
        if(peso === "" || altura === ""){
            return;
        }
        if(2.8 < altura ){
            makeDivError($fieldMedicoesRows.eq(1).find("div:eq(0)"), $fieldMedicoesRows.eq(1).find("label").html());
            return;
        }
        var icm = Math.round ((peso/(altura*altura))*100)/100 ;
        var desc = '';
        switch(true){        
            case (50 <= icm):
                desc = "Super obesidade";
                break;       
            case (40 <= icm):
                desc = "Obesidade Mórbida";
                break;      
            case (35 <= icm):
                desc = "Obesidade severa";
                break;     
            case (30 <= icm):
                desc = "Obesidade moderada";
                break;    
            case (25 <= icm):
                desc = "Sobrepeso";
                break;  
            case (20 <= icm):
                desc = "Peso ideal";
                break;  
            default:
                desc = "Magro(a)";
        }
        $fieldMedicoesRows.eq(2).find('input').eq(0).val(icm); // colocar resultado no campo icm
        $fieldMedicoesRows.eq(3).find('input').eq(0).val(desc); // colocar resultado de descricao no campo classificacao
    };

    var attachFuncions = function(){
        var $fieldMedicoesRows = $("#fieldMedicoes").find(".row");
        var fc = "click blur";
        $fieldMedicoesRows.eq(0).find('input').bind( fc, calcIMC);
        $fieldMedicoesRows.eq(1).find('input').bind( fc, calcIMC);
        $fieldMedicoesRows.eq(2).find('input').bind( fc, calcIMC).prop('disabled','disabled');
        $fieldMedicoesRows.eq(3).find('input').prop('disabled','disabled');
    };
    
    var ativarMedicoes = function(){
        var $fieldMedicoesRows = $("#fieldMedicoes").find(".row");
        $fieldMedicoesRows.eq(2).find('input').prop('disabled', false);
        $fieldMedicoesRows.eq(3).find('input').prop('disabled', false);
    };

    $(function(){
        /**
         * Carregar as validações nos campos.
         */
        attachFuncions();
        /**
         * Recalcular o IMC depois de carregar form
         */
        calcIMC();
        
    });

</script>